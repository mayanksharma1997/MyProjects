{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Bankruptcy by COVID-19: Top Five Airlines Affected\n",
    "\n",
    "---\n",
    "\n",
    "## What is Epidemiology?\n",
    "\n",
    "<B>Epidemiology</B> is the study and analysis of the distribution (who, when, and where), patterns and determinants of health and disease conditions in defined populations.\n",
    "\n",
    "It is a cornerstone of public health, and shapes policy decisions and evidence-based practice by identifying risk factors for disease and targets for preventive healthcare. <b>Epidemiologists</b> help with study design, collection, and statistical analysis of data, amend interpretation and dissemination of results (including peer review and occasional systematic review). Epidemiology has helped develop methodology used in clinical research, public health studies, and, to a lesser extent, basic research in the biological sciences.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## What is the Coronavirus?\n",
    "\n",
    "\n",
    "Coronaviruses (CoV) are a large family of viruses that cause illness ranging from the common cold to more severe diseases such as Middle East Respiratory Syndrome (MERS-CoV) and Severe Acute Respiratory Syndrome (SARS-CoV).\n",
    "\n",
    "Coronavirus disease (COVID-19) is a new strain that was discovered in 2019 and has not been previously identified in humans.\n",
    "\n",
    "Coronaviruses are zoonotic, meaning they are transmitted between animals and people.  Detailed investigations found that SARS-CoV was transmitted from civet cats to humans and MERS-CoV from dromedary camels to humans. Several known coronaviruses are circulating in animals that have not yet infected humans. \n",
    "\n",
    "Common signs of infection include respiratory symptoms, fever, cough, shortness of breath and breathing difficulties. In more severe cases, infection can cause pneumonia, severe acute respiratory syndrome, kidney failure and even death. \n",
    "\n",
    "Standard recommendations to prevent infection spread include regular hand washing, covering mouth and nose when coughing and sneezing, thoroughly cooking meat and eggs. Avoid close contact with anyone showing symptoms of respiratory illness such as coughing and sneezing.\n",
    "\n",
    "[World Health Organization - Coronavirus](https://www.who.int/health-topics/coronavirus)\n",
    "\n",
    "---\n",
    "\n",
    "## Impact on the Airline Industry\n",
    "\n",
    "With more government regulations introduced, traveling outside of the country became difficult. Airlines must travel even with near-empty flights to retain valuable airport slots, as stated by EU laws and other significant aviation associations. \n",
    "\n",
    "These regulations cause airlines to fly ghost-like airplanes, causing financial stress. Revenue for the first quarter, and possible remaining quarters of the year, are expected to be lower than usual and could take years to recover. Maintaining a low level of income might be the most challenging task for large companies since they are expensive. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Configure Jupyter so figures appear in the notebook\n",
    "%matplotlib inline\n",
    "from matplotlib import pyplot as plt\n",
    "\n",
    "# Configure Jupyter to display the assigned value after an assignment\n",
    "%config InteractiveShell.ast_node_interactivity='last_expr_or_assign'\n",
    "\n",
    "# import functions from the modsim.py module\n",
    "from modsim import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Function: Sets up our system. The US data remains static since it refers to the data of COVID \n",
    "cases on March 8th, 2020. This allows us to simulate each countries scenario against the same \n",
    "data to ensure accuracy. \n",
    "\n",
    "beta: Contact rate (stays universally the same as part of our assumption)\n",
    "gamma: Recovery rate (stays universally the same as part of our assumption)\n",
    "FS: Foreign country susceptible population\n",
    "FI: Foreign country infected population\n",
    "FIR: Foreign country recovered population\n",
    "country_name: Foreign country name\n",
    "avg_ticket_price: Average ticket price to go from that country to the US (gathered from Expedia and other sources)\n",
    "seat_capacity: the number of seats of the airplane\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "def make_system(beta, gamma, FSP, FIP, FRP, country_name, avg_ticket_price, seat_capacity):\n",
    "    \n",
    "    #Setup US S,I,R as of March 8th, 2020\n",
    "    US_State = System(S=32820000, I=541, R=0)\n",
    "    US_State /= np.sum(US_State)\n",
    "    \n",
    "    #Setup the foreign countries SIR model as of March 8th, 2020\n",
    "    Foreign_State = System(S=FSP, I=FIP, R=FRP)\n",
    "    Foreign_State /= np.sum(Foreign_State)\n",
    "    \n",
    "    #Separate the state from the airline info\n",
    "    #Each airline has specific data that must be accounted for\n",
    "    #We assume each airline begins with 500 flights per day\n",
    "    airline_info = {\n",
    "        \"country_name\": country_name,\n",
    "        \"avg_ticket_price\": avg_ticket_price,\n",
    "        \"seat_capacity\": seat_capacity,\n",
    "        \"total_income\": [0],\n",
    "        \"num_flights_per_day\": [60],    #Will change as the number of infected individuals increase\n",
    "        \"prob_of_infect\": .01,   #Each country has a 1% chance of containing an infected individual to begin with\n",
    "        \"fuel_cost\": 4000\n",
    "    }\n",
    "    \n",
    "    extra_information = {\n",
    "        \"US_population\": 327999459,\n",
    "        \"Foreign_population\": FSP+FIP+FRP\n",
    "    }\n",
    "    \n",
    "    #Begin at 0 days\n",
    "    t0 = 0\n",
    "    \n",
    "    \n",
    "    #Simulate until 6 months\n",
    "    t_end = 7 * 24\n",
    "    \n",
    "     \n",
    "    #Return our System object to begin our simulation\n",
    "    return System(US_State=US_State, Foreign_State=Foreign_State, beta=beta, gamma=gamma, \n",
    "                 airline_info=airline_info, t0=t0, t_end=t_end, extra_information=extra_information)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Function: Used to update the SIR model of the foreign country. This function gets run first before the SIR model\n",
    "of the US since the foreign country factor in the number of cases for the US.\n",
    "\n",
    "state: Current state of the foreign country\n",
    "system: All the variables the system carries throughout the simulation.\n",
    "\n",
    "\n",
    "return: the new updated state object\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "def update_func(state, system):\n",
    "    \n",
    "    #Grab the state of the foreign country\n",
    "    S, I, R = state\n",
    "    \n",
    "    \n",
    "    \n",
    "    ###Use differential equations to simulate the virus growing in the country###\n",
    "    \n",
    "    # Percent of people infected = Contact rate * % of people infected * % of people susceptible to the virus\n",
    "    infected = system.beta * I * R\n",
    "    \n",
    "    #Percent of people recovered = Recovery rate * % of people infected\n",
    "    recovered = system.gamma * I\n",
    "    \n",
    "    S -= infected\n",
    "    I += infected - recovered\n",
    "    R += recovered\n",
    "    \n",
    "    return State(S=S,I=I,R=R)\n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Simulate 6 Months, 60 Flights Per Day\n",
    "\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import randint\n",
    "\n",
    "\"\"\"\n",
    "Function: Runs our simulation. We simulate a number of flights per day and update each SIR model\n",
    "\n",
    "system: The system object we've created from our make_system function. Contains the data for the\n",
    "        Foreign country and the US country\n",
    "update_func: The callback function that updates each countries state\n",
    "\n",
    "return: a US_frame and Foreign_frame object used to plot\n",
    "\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "def run_simulation(system, update_func):\n",
    "    \n",
    "    #Grab our variables from the system object\n",
    "    US_State, Foreign_State, t0, t_end = system.US_State, system.Foreign_State, system.t0, system.t_end\n",
    "    \n",
    "    #Setup our time frames for each country\n",
    "    US_frame = TimeFrame(columns=US_State.index)\n",
    "    US_frame.row[t0] = US_State\n",
    "    Foreign_frame = TimeFrame(columns=Foreign_State.index)\n",
    "    Foreign_frame.row[t0] = Foreign_State\n",
    " \n",
    "    \n",
    "    \n",
    "    #Iterate our simulation for 6 months\n",
    "    #Goes one day at a time\n",
    "    for t in linrange(t0, t_end):\n",
    "        \n",
    "        #Grab our probability of possibly containing infected individuals on the plane\n",
    "        prob_of_infected_on_plane = num_of_flights_or_infected_on_board(US_frame.row[t], Foreign_frame.row[t])\n",
    "        \n",
    "        num_flights = system.airline_info[\"num_flights_per_day\"]\n",
    "        \n",
    "        total_people_flown_per_day = 0\n",
    "    \n",
    "        \n",
    "        #Simulate Specified amount of flights in one day\n",
    "        #Changes depending on the number of infected individuals\n",
    "        for flights in range(num_flights[t]):\n",
    "            \n",
    "            #Random number of passengers for that flight up to the max seating capacity\n",
    "            num_of_passengers_on_current_flight = calc_number_of_people_onboard(\n",
    "                                    US_frame.row[t], \n",
    "                                    Foreign_frame.row[t],\n",
    "                                    system.airline_info[\"seat_capacity\"])\n",
    "            \n",
    "            #Keep track of the number of people who have flown\n",
    "            total_people_flown_per_day += num_of_passengers_on_current_flight\n",
    "            \n",
    "            #Each flight contains a probability of containing infected individuals\n",
    "            #If the probability is successful, calculate the inner probability of how many people are infected\n",
    "            if flip(prob_of_infected_on_plane):\n",
    "                individuals_infected_on_flight = num_of_flights_or_infected_on_board(\n",
    "                                                                    US_frame.row[t], Foreign_frame.row[t])\n",
    "                 \n",
    "                #Can only have less than or up to the current amount of individuals on a flight\n",
    "                #If the value is greater than the number of passengers, update the US_State with the\n",
    "                #full flight capacity\n",
    "                if individuals_infected_on_flight <= num_of_passengers_on_current_flight:\n",
    "                    if flights % 2 == 0:\n",
    "                        US_frame.row[t] = update_SIR(US_frame.row[t],system, individuals_infected_on_flight, num_of_passengers_on_current_flight, 'US')\n",
    "                    else:\n",
    "                        Foreign_frame.row[t] = update_SIR(Foreign_frame.row[t], system, individuals_infected_on_flight, num_of_passengers_on_current_flight, \"Foreign\")\n",
    "                else:\n",
    "                    if flights % 2 == 0:\n",
    "                        US_frame.row[t] = update_SIR(US_frame.row[t],system, system.airline_info[\"seat_capacity\"], num_of_passengers_on_current_flight, 'US')\n",
    "                    else:\n",
    "                        Foreign_frame.row[t] = update_SIR(Foreign_frame.row[t], system, system.airline_info[\"seat_capacity\"], num_of_passengers_on_current_flight, 'Foreign')\n",
    "                \n",
    "        \n",
    "        #Update the US SIR and Foreign SIR model after a full day\n",
    "        US_frame.row[t+1] = update_func(US_frame.row[t], system)\n",
    "        Foreign_frame.row[t+1] = update_func(Foreign_frame.row[t], system)\n",
    "        \n",
    "        #Calculate the income for the day of the airline\n",
    "        # We deduct $4,0000 a day for fuel costs\n",
    "        system.airline_info[\"total_income\"].append(system.airline_info[\"total_income\"][t] + (system.airline_info[\"avg_ticket_price\"] * total_people_flown_per_day) - (system.airline_info[\"fuel_cost\"] * num_flights[t]))\n",
    "        \n",
    "        #Update the flights for the next day based on the number of infected individuals at both countries\n",
    "        system.airline_info[\"num_flights_per_day\"].append(num_flights[t])\n",
    "        num_flights[t+1] -= num_of_flights_or_infected_on_board(US_frame.row[t], Foreign_frame.row[t])\n",
    "\n",
    "\n",
    "        \n",
    "        #Stop the simulation since we have no more flights in our system\n",
    "        if num_flights[t+1] <= 0:\n",
    "            break\n",
    "            \n",
    "       #Return our frame objects from both countries \n",
    "    return US_frame, Foreign_frame\n",
    "        \n",
    "        \n",
    "    \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Function: Determines the number of people on that flight who are infected\n",
    "            based off of the percentage of infected individuals in both countries as well as\n",
    "            the number of flights for a given day. We combine both because as the total percent increases,\n",
    "            we return a larger number of people infected and if the total percent increases, we subtract the\n",
    "            current number of flights from the random number of flights.\n",
    "            \n",
    "US_State: US state object\n",
    "Foreign_State: Foreign state Object\n",
    "\n",
    "Return: random number of people infected on the flight or the num of flights per day\n",
    "\"\"\"\n",
    "\n",
    "from random import randint\n",
    "\n",
    "def num_of_flights_or_infected_on_board(US_State, Foreign_State):\n",
    "        \n",
    "    #The number of passengers infected are dictated by the % infected from both countries\n",
    "    #As a certain % is reached, we either increase or decrease the number\n",
    "    #of people that contain the virus which will impact the population of the US\n",
    "    total_percent = US_State.I + Foreign_State.I\n",
    "\n",
    "    \n",
    "    if total_percent >= 0.00 and total_percent < 0.02:\n",
    "        return randint(1,2)\n",
    "    elif total_percent >= 0.02 and total_percent < 0.03:\n",
    "        return randint(1,3)\n",
    "    elif total_percent >= 0.03 and total_percent < 0.05:\n",
    "        return randint(2,4)\n",
    "    elif total_percent >= 0.05 and total_percent < 0.08:\n",
    "        return randint(2,5)\n",
    "    elif total_percent >= 0.08 and total_percent < 0.1:\n",
    "        return randint(5,10)\n",
    "    elif total_percent >= 0.1 and total_percent < 0.15:\n",
    "        return randint(10,20)\n",
    "    elif total_percent >= 0.15 and total_percent < 0.20:\n",
    "        return randint(10,25)\n",
    "    elif total_percent >= 0.20 and total_percent < 0.25:\n",
    "        return randint(10,30)\n",
    "    elif total_percent >= 0.25 and total_percent < 0.35:\n",
    "        return randint(20,50)\n",
    "    elif total_percent >= 0.35 and total_percent < 0.45:\n",
    "        return randint(20,100)\n",
    "    elif total_percent >= 0.45 and total_percent < 0.55:\n",
    "        return randint(50,150)\n",
    "    elif total_percent >= 0.55 and total_percent < 0.60:\n",
    "        return randint(100,200)\n",
    "    elif total_percent >= 0.60 and total_percent < 0.70:\n",
    "        return randint(100,300)\n",
    "    elif total_percent >= 0.70 and total_percent < 0.80:\n",
    "        return randint(200,400)\n",
    "    elif total_percent >= 0.80 and total_percent < 0.90:\n",
    "        return randint(200,500)\n",
    "    elif total_percent >= 0.90:\n",
    "        return randint(300,600)\n",
    "    \n",
    "    \n",
    "    return 0"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Update SIR With New S, I, And R Values From A Single Flight\n",
    "\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Function: Updates the SIR model to new values as the infected and susceptible individuals increase/decrease per flight\n",
    "            This gets updated after every flight hour before we fully update the SIR model for each country\n",
    "            at the end of the day. Converts the SIR values to it's whole number values and adding the new S, I values\n",
    "            into the countries SIR data followed by converting them back to decimals.\n",
    "            \n",
    "state: the state object\n",
    "system: system object\n",
    "number_of_people_infected_on_flight: The number of people infected on the flight\n",
    "num_of_passengers_on_current_flight: The number of people on the current flight\n",
    "destination: The flights status (Where the airplane is headed to)\n",
    "\n",
    "Return: new state object\n",
    "\"\"\"\n",
    "\n",
    "def update_SIR(state, system, number_of_people_infected_on_flight, num_of_passengers_on_current_flight, destination):\n",
    "    \n",
    "    #Grab our variables\n",
    "    S,I,R = state.S, state.I, state.R\n",
    "    \n",
    "    #Grab our population in the country determined by the destination\n",
    "    population = 0\n",
    "    if destination == 'Foreign':\n",
    "        population = system.extra_information['Foreign_population']\n",
    "    else:\n",
    "        population = system.extra_information['US_population']\n",
    "    \n",
    "    #Add to the susceptible population in the country # of individuals NOT affected\n",
    "    S = (population * S) + (num_of_passengers_on_current_flight - number_of_people_infected_on_flight)\n",
    "    \n",
    "    \n",
    "    #Add to the infected population\n",
    "    I = (population * I) + number_of_people_infected_on_flight\n",
    "    \n",
    "    #Update the population since more people came into the country\n",
    "    system.extra_information[\"population\"] = population + num_of_passengers_on_current_flight\n",
    "    \n",
    "    #Update the SIR state values\n",
    "    new_state = System(S=S,I=I,R=R)\n",
    "    new_state /= np.sum(new_state)\n",
    "    \n",
    "    return new_state\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Calculating People on Board On Single Airline Flight\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "from random import uniform\n",
    "\"\"\"\n",
    "Function: Based on the percent infected in the foreign country and US, we return a random number up to the max\n",
    "            seat capacity. The less the total amount of people infected, the more open seats we have\n",
    "            \n",
    "US_State: the us state object\n",
    "Foreign_State: the foreign country state object\n",
    "seat_capacity: The seat capacity for the airplane\n",
    "\n",
    "Return: Random number of people on board\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "def calc_number_of_people_onboard(US_State, Foreign_State, seat_capacity):\n",
    "    \n",
    "    total_percent = US_State.I + Foreign_State.I\n",
    "    \n",
    "    if total_percent >= 0.00 and total_percent < 0.02:\n",
    "        return uniform(1,seat_capacity * 1)\n",
    "    elif total_percent >= 0.02 and total_percent < 0.03:\n",
    "        return uniform(1,seat_capacity*0.8)\n",
    "    elif total_percent >= 0.03 and total_percent < 0.05:\n",
    "        return uniform(1,seat_capacity * 0.7)\n",
    "    elif total_percent >= 0.05 and total_percent < 0.08:\n",
    "        return uniform(1,seat_capacity* 0.6)\n",
    "    elif total_percent >= 0.08 and total_percent < 0.10:\n",
    "        return uniform(1,seat_capacity *0.55)\n",
    "    elif total_percent >= 0.1 and total_percent < 0.15:\n",
    "        return uniform(1,seat_capacity * 0.45)\n",
    "    elif total_percent >= 0.15 and total_percent < 0.20:\n",
    "        return uniform(1,seat_capacity * 0.35)\n",
    "    elif total_percent >= 0.20 and total_percent < 0.25:\n",
    "        return uniform(1,seat_capacity * 0.25)\n",
    "    elif total_percent >= 0.25 and total_percent < 0.35:\n",
    "        return uniform(1,seat_capacity * 0.2)\n",
    "    elif total_percent >= 0.35 and total_percent < 0.45:\n",
    "        return uniform(1,seat_capacity * .15)\n",
    "    elif total_percent >= 0.45 and total_percent < 0.55:\n",
    "        return uniform(1,seat_capacity * .10)\n",
    "    elif total_percent >= 0.55 and total_percent < 0.60:\n",
    "        return uniform(1,seat_capacity * .08)\n",
    "    elif total_percent >= 0.60 and total_percent < 0.70:\n",
    "        return uniform(1,seat_capacity * .06)\n",
    "    elif total_percent >= 0.70 and total_percent < 0.80:\n",
    "        return uniform(1,seat_capacity * .03)\n",
    "    elif total_percent >= 0.80 and total_percent < 0.90:\n",
    "        return uniform(1,seat_capacity * .02)\n",
    "    \n",
    "    return 0\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Graphing the Results\n",
    "\n",
    "\n",
    "## We simulate our model for each of the five countries and their airlines\n",
    "\n",
    "\n",
    "### Airlines Used\n",
    "\n",
    "- Singapore Airlines - Country: Singapore, Airplane Used: Boeing 777-300\n",
    "\n",
    "- Air Zealand Airlines - Country: New Zealand, Airplane Used: Airbus A320\n",
    "\n",
    "- Emirates Airlines - Country: Spain, Airplane Used: Airbus A380\n",
    "\n",
    "- Turkish Airlines - Country: Egypt, Airplane Used: Airbus A380\n",
    "\n",
    "- Qatar Airlines - Country: Qatar, Airplane Used: Boeing 787-8\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure to file figs/Number_of_flights_per_day\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAagAAAEYCAYAAAAJeGK1AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAgAElEQVR4nOydeXhM1/vAPzOTTRYSiUQsEYJjjX2Jqn0tRau29qdVFKUtRRW1VS2trdUWVZRS/dqXWqul9qViX48lhAhBLNnXmd8fdzImkURSifV8nmeezD33LO+dO5n3nve85311JpMJhUKhUCieNfRPWwCFQqFQKNJDKSiFQqFQPJMoBaVQKBSKZxKloBQKhULxTKIUlEKhUCieSZSCUigUCsUzic3TFkDx+AghLgN3gRpSyiSrcmcgEmgopdyeC+OOAVpLKavndN/ZkMEJWAo0AQ5KKV9Nc74bMD+D5uOllCOEECbgdSnleiHEAsBZSvlWFsbuBkyRUnpkUucNIFBKeTUr15Ombdo9IInAJWAR8LX1vX4czNf8XppxrgH/A8ZKKeNyYpwMxi4K/AHUlFImCiFKADOA+sAtYLKU8scM2jYA/kH77num/TyEEJ8A04GpUsrBOSCrDugJLJJSxmXl/mfSlxOwH+1/8/bjyvaiomZQLw6VgU+fthBPgXZoyukVoGMGde4A3um8vk6nbn+0H6HHRghRDFgF5HuMbrryQN4SwDBgqPmVk6y3GkcAA4G3geXmH+bc4kdgklk5OQJ/AXFAFeALYJoQotUj+nBGU2hpeRPIyY2e9YCfyYEHeyllNDAbmPy4fb3IqBnUi8NlYIwQYrmU8vJTluVJ4gqESSkPZVLHJKW8kZXOpJT3c0YsAHLih/1eGtlDhBDNgbeAcTnQfwrxaca5JIQ4DxwDWgPrcnAsAIQQVYHaaIoE4P8AR+BtKWUsIIUQddGUz4ZMutoOtAW2WvVdAKgOHMlBkXNaUc8DJgghxkkpL+Zw3y8ESkG9OPyA9uQ/C2iZXgUhxHY0c9Ngq7K05q0ItCfSTmimk4FAEtqTnifak/Z7UsoEcxd6IcR0oDsQBUyUUn5v1X9LYCLaU3kQmklkvvncGKAW2ky+NvCJlPLXNDLrgI+BjwAf4CwwXEq50dx+tNV1vC+lXJCNzyy9z2gBViY+IURH4Cvz2FvN15BXStnNqs1g8+eUD9gI9DQrukvmKieEEF+iKZRvgQ7muoeAgVLKf7MpZhIQbzX+u8AIoAja5zNSSrnB6npsgFLmV0cp5d9ZGURKeVIIsdMs7zpzf58CHwK+aPd7g/k4EbgOfCalnGcl2zZgl5RydDpDfAKslVImm4+bAuvNyilFhj5ZEHU12ozyE6uydsA2IK91RSFEM7T7WQG4jTaDmyKlNJlNdh8By9CsEbbAZqA3UADNnAgQKYR436rPdO+/EMKGTO63lDJWCLHFPObLaP14JMrE9+KQAPQCmgshOj9GP72Bi0BF4E+0p7zP0P7JOqM9qf6fVf0qaGahWsBg4GshxDsAQojywErgJ7QfhLHA1DTytQB2oimojenIMxz4EhgF+ANrgD+EEJWAKebzIWYZlj7GdT+EEKIOsBiYiWZCPY72Y2KNO9oTflPgNaARD8xvNc1/G5hl/Rjtel8HygPngBVZNaEJIWyEEE3RzH5rzGXNge/RPp+KaGajFUKIAKum76A9uDQC9mZlLCtOmWVFCNEFGIP2Y1wK6Ib2fegtpYwHVgBdrOQthPbZ/J5B3y3RFEAKJYFrQoipQohrQoiTQogeWZBxHeAthKhiVfYm2nfPghCiHtp3bB3a93Y4MBLoa1XNH3gVzWz8gbmfPsBVoL25jh8PvmuZ3f+s3O/NZPBAqVAzqBcKKeVuIcRc4DshxJ9oT7XZ5YKUcjyAEGI22sxopJTysLnsX8w/WGbuos1cooHTQojqaP/wi4EhwGIp5U/muheFEH5oimyJuSwWbdZlTCuI+R95AJozQ0r9MUKIWsAQKeU7QohIIPkRJjx3IURUmrK9Uspmj/gsPgLWSSmnm4+HCyEapamTMnO7bZZ5NVDJfO6W+W+4lDJKCOELxACXpZS3hBAD0X4o9UAy6bNcCJFyLg/azOk3YGqKTGiOBCmfz0UhRDVgEJoZEEA+xszyHg9mIaFANynlevNxsBBiB1DOfPwbsE0I4SWlDEN7oDkspZRpOzWvz3miKcAUXNDu9yI0s2IN4EchRJSUMrOHj3tos5t2wBEhRD40JfM28L5VvU+AzVLKFNPoOSFEEbTPcIa5zBb4wPx9OiWE2AxUk1ImCyHumOvcNM9+IPP778uj7/dprZlwllKm/Y6+9CgF9eIxBGgDfIP2pJtdLli9jzH/DbIqiwPsrY5PmJVTCgd58KNQHqhofvJOwYbUivNSesrJjCfgAexLU74bbUaXVe7yYDaTQmx6FdPgj6ZordkHuFkd30/jhXUP7Qk7PX5Em3GECiH2onmvLbAycaXHJzwwLcUBN9J4q5UHagkhhlmV2aI9rafwOOsbeYH7AFLKHUKI6kKIcUAZ89gCWGiuuwttptEB7VrfRlNa6eFl/mv92SUCQVLKj83HR4QQFdBmIo+aHa9Gm+mMRpux7JFS3jUrkRTKpyPPbrRZv6v5ODLNw04E4JTJuJnd/6zc73DzX080k6nCCqWgXjCklPeEEAPQzCqr0pxO5dFktpGnJb1ZV0YKBB5+8tejmRtB+379gGbiy4jMFEVG53RkzzxtlFJeeHS1h0jMwjjpKZd0TXZSyvNC+8VsiWYOGgT0F0LUzGQGeP0RstugefaldWKwvo9ZUcYZUQXNUSLFrX4Wmtv+JrS1nC9TKprXcX4HOpln8JXRZkLpkfKdsv6sQs0va84Ab2RBzjXADPMs9Q3SmPfMpPc5pIyfcp8TMqmTHhne/yzeb0Mm/bz0qDWoFxCzuedPtLUTaxJI7fJcIgeGKyeEMFgd10YzW4D241JSSnkh5YW2HtOXLCCljED7wQpIc6oOmjNAbnMSqJamrEY22qd9IPgAaCelXCOl7AWURptJ1HsMGc8AxdJ8xh2xWgv6rwghyqF91svMRf3QzIl9zY4Qx9HWoqx/wBeh3a9uwLZMFG9KeQGrsr1AlTRrNOVJPYNPF/M4+9BmbU0xr9Gl4Qzpf5duos2yH0W2XNazeL9T9lBlycv0ZUPNoF5cPiS1fR8081t/IcRCNLPNNKy8wf4jBYB5QohJaGa0nmhrAaA5BhwQQgxH+5GrhObVlB336K+BsUKIEDQvqE5AczRFl9tMB/aZN3xuNo/9CnA+i+1TTDaVhRBX0VzivzKvZZwHWqE9QR99DBknAf8TQpxF20PUCG1W0zWb/dgLIQqa3zug3ctJaF51f5rLw4GGZsWlQ/M8KwecSOlESnlWCHEUzbycmQfeNbQf5UpoigO0mfYnwA9CiO/QlEnPbFzLajQT32Ep5c10zk8GAoUQI9BMhlXRZp8pXnyP6j/lflYTQmS2rSGFrNzvSmhm8sf9P3whUTOoFxTzXqgxaYqnAlvQZlfr0ezxIY851F9o5qSDaCafT6SUm80yHEJbqO+EpiynoSmcSdno/0dz/UloP4Rt0aJX7HpMuR+JlDIQbT3tU7TZQnVgLembgdJrH47mBTkXTWlMQ1uvmQ9INI/J9lLKcxl28ugxVqOt0QxEm7l+BvS1cprIKq3R3MSvo80cR6EpDOvNz/3RZhGBwN9oa5ET0X7orUnx2ktrYraW24RmJqxvVXYNTcFWNsswFugvpVyexWtYheZokZ55DynlUTSvvA7m/iegfWcnZLH/E2j/N1vQPGYfRVbudz1zn4p00KmMugpF+pi9BaOklKesyjYAB6SUY5+eZM82QojJQBEpZaZmRiFEDTS378JW++peGszehiGAv5Ty0qPqv4woE59CkTE1gSHmfV3BaKbFRmiekoo0CCFqou3F6o1mzsoUKeVB87aFTmhrVy8b3YFVSjlljFJQCkXGzETby7IEzbX8DPCW9YxKkYpGaBtff8iGCbYfsFYIsURK+V/27T2XCC1Y7Ac8mbXU5xZl4lMoFArFM8lzP4MSQtijuf5eR+0lUCgUiucNA1qosoNpvRmfewWFppxy3aNLoVAoFLnKq2iRPSy8CArqOsDixYspWLDgo+oqFAqF4hnixo0bvPPOO2D+LbfmRVBQyQAFCxakSJEiT1sWhUKhUPw3HlqiURt1FQqFQvFMohSUQqFQKJ5JlIJSKBQKxTPJE12DEkJ4o4Xrb4iW2+ZnKeVIIYQdWsy1t9DskNOklBOfpGwKhUKheLZ40k4Sa9EiUnuh+b3vEEKcQQuPItASfeUDNgshrkkpF2bYk0KhUCheaJ6YgjIH3iwBvGIOaXJJCNEALYnYFLRU0neBu0KIKWjxvJ6IgroSdIfgoHB8S3pQ1Nft0Q0UCoVCkes8yRlUNbRw9WPMmTnj0GKdzUObTZ22qnsWbVaV61y9fJcFM/eC0YhOZ6JJS3cCmtR9EkMrFAqFIhOepILKj7ZTeAfaTKoMWhK4W+bzMVZ1YwDHJyFU8MVwMJlAp8dkMhL029+EL/sZp3oB1GjTGee8akalUCgUT4MnqaDigQgp5Rjz8TEhxFzgPfNxHqu6jjzIXpmrFPNzx8bWQFJiMjqMOCWE4XY3Gpb/TeDqrUSW96FwvY5E465MgAqFQvEEeZIK6izgKISws0pOZgPcRUv9LNDSQIM2uzr9cBc5T1FfN7r2CSD4Yjj3ko38ti2ZEvFHqRpxCe/bsRhkDBsjb2DU3cRg0NP5PX/8Kvg8CdEUCoXipeZJ7oP6C82cN1UIYSeEqAj0AP6HlqxstBDCQwjhCwzmCSYwK+rrRt3GJWndrDTfDGhKXIHq+PlCUhU7rvtVxKjTg05PcrKRvVPn88ewjzh+5gBGk/FJiahQvPTcvn2bIUOGEBAQQOXKlWnWrBk//vgjSUlJAAQGBlKvXr2nLGXuM2rUKMqUKcP58+dTlf/xxx907tw5w3aNGjXi77//BqBVq1b8888/uSpnTvDEFJSUMg6oj7b+dB1t/WmSlHIlMAo4CZwCDgIrgZ+elGzWFCuYly/7NiAiT2HicGNbfGF0BgM6QK8zkT/mOvnkdSYF/kL/jWNYfXozp05eYvfWC1y9fPdpiKxQvBQMHDgQOzs7/vzzT44ePcqMGTNYv349P/zwAwDVq1dn586dT1nK3CU6OppNmzbxxhtvsGhR6mf4Nm3asGTJkiz1s2HDBho2bJgbIuYoTzSShJQySErZSkrpLqUsLKWcYi6Pk1L2k1J6SSkLSCm/kFI+tUyKLq75qPvpBCJr9yFSp+OUMQm9q4mAWnZUnPAJ9zs1xCWfO2FRt/hj93ZWzzvGto2nWTRrn1JSCkUucezYMZo3b07evHkBKFWqFMOHDydPHm35+sCBA1SvXt3yvlWrVkyaNIlatWpRr149iyIDuHDhAp07d6Zq1ap07dqVESNGMHToUAAiIiIYMmQIjRo1olKlSrz++uvs27fP0m/z5s2ZMGECVatWpWHDhqxcudLSb3BwMH369KFmzZo0atQo1Qxv6NChDBgwgEaNGtG8eXMSExO5cOEC3bp1o0aNGrRo0YJ169Zl+hmsX7+esmXL0rNnT9atW8f9+/ct51atWkXbtm0t7zt37kznzp2pVasWZ8+eTdWP9WyqUaNG/Pzzz7Ro0YJq1arRo0cPbt++bam7bNkymjdvTo0aNejRowdXr14FwGg0MmHCBOrUqUNAQAA9evTgypUrWbqXWSVba1BCCEfAEy3aw40XOUWzwWDgrRb+lPAtyJTFgRRN2EXx8+fYLitBtbcYWbMoNxKC+WfpAaJ1ekAzAQZfDKeorxsJ9+5h5+r6tC9DocgWX87dT+CZsCc2XvWyXozuWTtLdVu2bMngwYNp06YNtWrVomrVqtSrVy9Ds96FCxdo0qQJu3fv5sCBA/Ts2ZPXXnsNHx8f+vTpQ5s2bVi4cCGBgYH06tWL1q1bAzB58mRiY2PZsGEDtra2TJ06lXHjxrFhwwYALl++TJ06ddi3bx/Hjx+nZ8+elChRgvLly9O9e3eaNGnC9OnTCQsLo0+fPtja2tK7d28A9u/fz+rVq3F2diYhIYH333+fbt26MWfOHM6cOUOfPn3w9va2KNq0LF26lPfffx8/Pz8qVKjAihUr6NGjR7p1jxw5wpw5c6hatSpOTk6ZfrYbN27k119/xdbWlm7dujF//nw+++wztmzZwvfff8/s2bMpVaoU8+fP54MPPmD9+vVs3bqVnTt3smnTJhwdHRk1ahSzZ89m/PjxWbqfWeGRCkoIURz4CGiJ5shgfe4EsB6YI6UMzjGpniGqlvFk1ueNObruDuFBN9kd6cP1redZvvU8TXwTqehVgIM3DBiTTRhs9BTzcycmNJQj/frj6l8Rr2ZNiPEqxZXg+xTzc1degArFf2TChAmsXbuWzZs3s2rVKqKjo6lZsyYjR46kVKlSD9XX6XT07dsXW1tb6tatS4ECBQgODubOnTvcv3+fvn37YmNjQ506dWjevLmlXf/+/bGzs8POzo7Q0FDy5s3LzZs3Lefz5MnD559/jr29PTVq1KBp06Zs2LCBuLg47t27x+DBg7G1tcXHx4d+/foxffp0i4KqWbMm3t7egKYUnJ2dLQrG39+f9u3b87///S9dBXXixAmuX79ukbVLly5MmTKF999/H73+YWOYm5tbltfkOnfujJeXFwANGzYkKCgI0GZP7777LuXLlwegV69eLFq0iAMHDuDi4sLNmzdZu3YtDRs2ZPz48enK8ThkqKCEEPnRIjy0B7YAU9E868LRUvR6AJWAesAJIcRK4DMp5e30e3x+yedsT/0u/4fR+DaOl+/y5/7L7DkWis/tPZSMuMJZu3oke1bj1Tq+FCnmyu8LZuGjg3tHjxF8NpTDhVtg1BmwsdHT9cM6SkkpnlmyOpt5Guj1et544w3eeOMNkpOTOXHiBLNmzaJnz55s27btofrOzs7Y29tbjm1tbTEajYSFheHh4YGNzYOfP29vb4tZ6+bNm0yYMIHz58/j6+uLh4cHJtODFQdPT08cHBwsxwULFiQkJITw8HAKFCiAra2t5VzhwoW5fv16qrYpXLt2jStXrqRSRsnJyRZlkJalS5cSGRlpWTsyGo3cuXOHbdu20aRJk4fqW4/1KDw8PCzvbWxsSE7WUjOFhoYyc+ZMfv75Z8v5xMREQkND6dChA6NGjWLJkiV8/fXXFC1alM8//5xGjRpledxHkdkMajuao0Jfs4NDeuwCfhRC5EXzyNsOVMgx6Z4x9Ho95Uu4U76EO73e8OfYukhuXIjjQKwnEZfD2XY5HL8DR7jufg27dvlpcNsFp+DCGNEDOpISkzkw83/YtyiL+yt1MFj98ygUiozZuXMnw4cP559//sHW1haDwUDlypX58ssvqV+/fqq1mEdRsGBBbt26RVJSkkVJ3bhxw/L+008/pX379ixcuBC9Xs9ff/3FgQMHLO3Dw8NTtQ0NDcXb2xtvb29u3rxJQkICdnZ2AFy9ejXVj79Op7O89/T0pEKFCixdutRSFhYWlqpOClFRUWzYsIE5c+ZQsmRJS/lPP/3EokWL0lVQ6fWTXTw9PXn33XdTeQdevHiRQoUKcfXqVcqVK8eSJUuIjIzk999/Z8CAARw6dCiVkn4cMpuP1ZZSzsxEOVmQUkZIKb8FauaIVM8BznlseaXj2wQMm8mY/i1oEeCLo72e2jd24ipLEq/Pw5+Fo9lZJQqDjR4dJvQmI47Bxzk//UcOduvJxZ9+Jso8lVYoFBlTvXp1bGxsGD58OKGhoYA205k1axZVq1Ylf/78We6rSpUqeHh48NNPP5GYmEhgYCBbtmyxnI+KisLBwQG9Xk9wcDAzZ84kMTEx1fkZM2aQmJjIvn372LZtG23atMHf3x8vLy+mTp1KfHw8V65cYdasWbz++uvpylG/fn2uXLnCqlWrSEpK4urVq7z77rupFFYKf/zxBwULFiQgIIACBQpYXp06dWL//v0PuZznFO3atWP+/PlcvHgRk8nEunXraNu2LWFhYezfv5+PPvqI0NBQnJ2dyZcvHy4uLqlmpo9Lhj1JKS2hh4QQo4HFUsoLmXVm3eZlQafTUaqoG6WKutHZ5zr3/wqinC6M0Sdboi95gtsuoUSXjqNMUjXa1a2CW6gzYX/9TdS589zY9Cc3Nv2JiyhNxYnj0BkMT/tyFIpnEkdHRxYvXsz06dPp2LEjkZGRuLi40LBhQ2bMmJGtvgwGA9999x0jRoxg3rx5VKpUiVq1alme+sePH8+ECRP49ttv8fT0pHPnzkyePNnivebk5MT9+/epW7curq6uTJo0ibJlywIwe/Zsxo0bx6uvvoqdnR3t27fno48+SlcOV1dX5s6dy9dff83EiROxt7enbdu29O3b96G6S5cutThxWFO6dGnKly/PokWLqFy5crY+h6zQrl07IiIi6Nu3Lzdv3sTHx4cZM2bg6+uLj48Ply5domPHjkRHR1O8eHG+//77HJm5paCztq1mhBBiG9pa0yFgMbBESnkz81ZPBvPG3ktbt26lSJEiT1UWU3ISd/5ZjGPJqtx0KMaf+y+x9doWTB7aLKmEsS5fvtUZe1sD0ZeDCfvrb25t30m+Sv6UGTLI3EcykefO41JG5OiNVigUGrGxsZw8eZIaNWpYygYMGICPjw8DBw7MtO2BAwfo168fgYGBuS3mS0NISAiNGzcGKC6lvGx9LksuF1LKRkBRYCnQFQgRQmwWQvyfECJz/8WXCJ3BBvcm75HHtyLFCualV7tKzGlcnxZ5m2K6X4BThx0Y8sMuboRHszXuHCdfLUqpWdMo0bO7pY+7h49wYugXnBn/9VO8EoXixcVgMNC7d2+2b98OwPHjx9mxYwd166osBs8aWTYWSimvA9OAaUKIkkA3YDYwWwixBpghpdybK1I+pyTcDCZ87bc0srGlwetj+Pp2EEHX7jPgu23YVfqHuORY/nd8LVUcqlPcWJpa/mVwiI7G1tWVvOXKWvqJD79Dwu3buIjST/FqFIoXAzs7O3744Qe++eYbPv30U9zd3fn888+pWfOlWUJ/bsiSiS8FIUQBoAPQCagDHAV+R8vn1AtNSX2RC3JmJpMvz4iJLy3GuGhu/vED+jzOFGjdj+i4JKb9foiDp29gcL2FT/l7RNy5i6+shc6oA70J35YG2tQIIK+ds8XL78qSZVxduhzfd/+PQu3aKNOfQqF4YcjMxJelGZQQ4n2gC9AACEFTSr2klNKqjgS+A56ognqW0Ts44dVhCBiT0el0OOexZVinsqze6cBv23Rc2uNJVU8H9EbNQ8hkNHLg2FkC/Mvh5uJu6Uen14PRyOUFC4k8f56SH/XDxjFPRsMqFArFC0FWTXxTgBXAV1LKXRnUOQ6MyxGpXiB0Oj0YtKU+kzGZW2umUfv+LUp26MWkdaHIm3GUwYBBB3qDgcrli1PKvbil/fR983DO706B1h9gt2sT7NlHTPBVygwbgmORwk/rshQKhSLXyaqC8rbK4ZQuUsqDaJHIFRlgjI3CGB+DKTEe/3I+fFeyFBMXHORs6H3ymnR4eOalZP6KxCcm42Bnw82o2xw+dYHi0oMQYwKGgk0JyPcvXDnF8cGfU6r/x7gH1Hral6VQKBS5QlbdzB2B3kA5tDBHADrAHqgqpSyTaxI+WjZfntE1qPQwJsaTdC8MuwJa0sO4hCQWbjjFX/9eJS5BCy/i5GBD/apFaFarGMcPS07suAnoMGHEvWISjcMucmfvfgAKt3+DYu90UXuoFArFc8lju5mjhTwaA3gB7wJuQA00Z4kVOSXoy4De1t6inAASz+6iVcQyfhlUg486VKa0jyvRcUls3HuZAd/uYM/pKHQGPejApDdxMOkgy2oYKPh/nUCv59rK1Zz6chyJ2Qj1olAoFM8DWVVQrYB3pJRtgHPAKCllBWA+2v4oxX/AlJzEvT0riQ85C6GnaV67GFP71+f7QQ1oXbc4TnlskbeiOJWcxHU96IQBQ/4kTt06z95SBiqMHY1tvrzcP3acwF59ufDjLOLDw5/2ZSkUCkWOkFUF5QwcM78/BaSE3/0WeDhKoSJL6Aw2FHp3PO5N38fF/0F2y+KF8tH7DX9+Hd2cQW9XpbifOyHJyQSeSebWv9VxiCyB470KULwUlaZNwbVyJYxxcdz8Zzt6qyCNJnNEYoXiRSO9tOePSnluTUhICEIIvv/++4fOWSfzy2n++OMPqlSpkupVuXJlhBCsXr36sfq2TliYk1gngnzSZNVJ4jJalPKrwFmgGtrsyQjkyxXJXhIMTvnIV/NBjK2kqLvc27OS/A3/D3s7BxpUK0qDakUJvRXFlgPBbA28yt0zpVlw5iy/bTxHzYru2FUS+FdsgZc+CltztlFTcjKH+36Mc+nS+H3YCxtHx6d1iQpFjpI27fnYsWMBLeV5mzZtstXX7NmzefXVV6lSpUpuiPoQ6ck4ZswY9u7dm6NpKl4UsrMG9bsQoi2wBuguhBhjLldBqXKQW+tnEBG4ifC/5qcqL1TAmW6tyzN/ZDOGd6tBtTKeJBuNnLq5j8h9Duzdd4PV+6LZf1iL5xt5/gJxYTeJunABQx61Z0rx4pBR2vPspDxPoX379nz22WdER0enez4+Pp6JEydSv359XnnlFUaNGkVMTAz37t2jXLlylsjqx44dQwhhidEXFhaGv79/hv2msHDhQtatW8esWbPIl0971s8sDfz169fp168fDRo0wN/fnw4dOqR7bSaTiR9//JGWLVtSpUoV6tWrx4IFCyznhRAsXLiQRo0aUbNmTQYMGEBMTIzlmkeOHEn16tVp0KABO3fuzPQacpOsxuL7FvgQuCulPAT0BV4DYtAiSChyCPfG7+HgWxG3+umbKmwMegIqFmLMBwHM/aIpVRz80Rn16NCD0cTC7WvpsXgCG+7ewH/GdEp93M8SeSIpOpr7p04/yctRPIcEjW9P0Pj2qcpuLJ1A0Pj2RJ97sJMk4vAWgsa359aGWZaypMg7BI1vT/D0nqnah8z7jKDx7Ym/ftFSdmfnw2klssLSpUvp0KFDqrTn6XHkyBH69u3L1tjSfZgAACAASURBVK1bEUKkW2fAgAG4uLgwblz6WzgnT57MyZMnWblyJZs3byY8PJxx48bh6upK5cqV2bNnDwB79+7F3t7ekjdq586d1KpVK9NU6/v372fSpElMnToVPz8/QJsdvv/++7z66qvs3buXSZMmMXHiRIvi++KLL/D29uavv/7i33//xcfHh2nTpj3U9/r161m7di0LFizg8OHDjB49mkmTJqXKDLxjxw7WrFnDqlWrOHToEGvWrAHgu+++4/Tp02zevJnly5ezf//+DK8ht8lyfl4p5RIp5U7z+wVSyppSypZSynO5J97Lh12BohR6Zww2zg+y7kbLA5iMD68nebo50rFVdWxtDZqXnw6iXcKJtLnK6itL6PXH/1gbDMeOhbLr73PsnzKPkyNGc231WrIT4kqheFZIL+354sWLMRqND9VNSXnu7OycYXgwGxsbpkyZwsaNG1PlhAJtFrJ8+XKGDBmCh4cHLi4uDBo0iNWrV5OQkECDBg3Yu1cLP7p3717at29vUVA7duzI1GQXEhLCgAED+OSTT2jQoIGlfMeOHZY08La2tqnSwIOWCmTQIC3zQWhoKPny5UuldFJo2LAhixcvxsvLi9u3b2Nra0tycjJ37tyx1OnWrRt58+alSJEi1KxZkytXrgCwadMmevXqhYeHBwUKFODDDz/M8Dpym0euQQkhWqHF3ysP5AXuozlMLJVS5s5KosJCxJG/ub1xFs7+DfF8/eG8MkV93ejaJ4Dgi+EU83PH6BzAb/v/4sTdI0RfL8CGC+e4gB49YND5UtXutAqZpMiUEl+sfKisYKfhD5XlrdqMvFWbpSqzccmfbvsiPSY/VJa/Xqdsy5ZZ2vO0ZDXluZ+fH0OGDGHkyJGpcirduXOHuLg4unfvnkrB2djYcO3aNRo2bMgvv/xCTEwMZ86c4euvv+a1114jKiqKffv2MXLkyHTHi42NpV+/ftStW5devVIboB6VBv7y5ctMnjyZ69ev4+fnh729fboPm0lJSUycOJG9e/fi6emJv78/QKq61pl+UxQYwO3btylYsKDl3NPcX5qhghJC2APL0Ux5O4H9wD00JVUF2CyE+APoJKVMzKifNH12R4uAHm9V3A/4H/Aj8BaQDEyTUk7M9tW8gNi6eqJ3zItDoQdpnpNjo0i6fwv7glpIpKK+bhT1fTDj+qL12xiNnTkVFM6GtaeJD41Ah45kk4l/y/nR+ORdwlXIJMVzxqPSnqf1YMtOUOV33nmH7du3M2zYMMuPuKurK7a2tixfvpwSJUoAkJCQwNWrV/Hx8cFgMODk5MRvv/1G+fLlKVy4MD4+PsyZMwdfX1+8vLzSHWvYsGHY2toyfvz4h85llgY+MTGRvn37Mm7cOFq1agXAggUL0vX+mzZtGvHx8ezYsQMHBwfu37+foSk0PRmuXbtGpUqVLOM/LTIz8Y0CKgKVpJSNpJQfSylHSin7SynrAf5oimpANsarCkyVUjpbvX4FvgQE4Ie2Afg9IcS7/+mKXjDyFPfHp+9MnK3c0KNObOfavMHc3vJLhu30ej0VSxbgnfb+2NgYMGHCpDNxqfAdFjXLS3g+A7EhIRweOJijf2xn99YLXL1890lckkLxn3hU2vPY2NjH6n/ixImcPn3a4vhgMBho06YNU6ZM4e7duyQkJPDNN9/Qp08fS5sGDRowb948ateuDUDt2rX59ddfMzTvzZ49myNHjjBjxgzszdkKrMksDXxCQgLx8fE4ODgAcOrUKRYuXJgqHX0KkZGR2NvbYzAYuH//PhMmTABIt25a3nzzTWbPnk1YWBh37txh1qxZj2yTW2SmoLoAA6SUp9I7KaU8DXyOlsAwq1RDS9GRlveA8VLKu+ZQF1PQQispAL19HvS2D77MpuQk9A5O5PEp/6DMmIwp+eEvX1FfN979MID6zUrjUMqDu1fKcjuuOCuaeXLOx54IXT7W/3OPbRvPsOinfUpJKZ5ZHpX2fOLExzO6eHh4POQsMXz4cAoWLEjbtm2pU6cOly9fZs6cORjMocUaNmzIvXv3LAoqICCA2NjYlNA96V5DeHg4LVq0eGg/1KhRoyxp4FevXk1AQABdunShSZMm9O3bFycnJ8aOHcuXX35JtWrVGDZsGJ06dSI0NPQhb8H+/ftz/fp1atasyeuvv46bmxtCCM6de7TLQJ8+fahVqxatW7emTZs2TzVPVoax+IQQ8UBpKWVwRo2FEMWAE1LKvI8aSAhhACKA7WgzrxhgLprJ7w5QVEoZYq5bF9iYxX59eY5i8eUUxsR4dAYbdHrtH+XO9v8RG3wCrzcHY+OSP902JpOJdbuCmLfuFEYSKSai8Lt6j8jI4qDTAybqNypO/VYVnuCVKBSKl5n/GovPFnjUnDkOyGrK9wJoe6Z+BYqjrTd9CHxsPh9jVTcGUDtLM0Fva29RTsb4GCJPbCf+2nkSw69l2Ean09Gmnh/j+9TB1cmJ4DOuSFNpDAY9mIzojcncWfEzZwIzyqiiUCgUT47MvPhM5leOIKW8AdS3KjoqhPgBaGk+tnYncwSicmrsFx29vSNFuk8iNvgkeXwrPrJ+BT8Pvvu0Pt8sDOTM5TtE6vXU9XWh4LnNeN65Rsjk7wkdk0Tjsg0f2ZdCoVDkFpkpKB0w12zqy4iHV/kyQAhRHugopRxtVWyHNgu7geYkkfL4XwZQO0qzgcEpH87lXrEcJ9wM5t6B9Xg074HezuGh+u758jD+w1f45Y+TrN9ziY3BEdg51KCVXzTnCscQdHwZ56Ou0b1qJ+wMtg+1VygUitwmMwX1axbaRwMLszjWPWCQECIEmIe2DvUJ8BFaANrRQojjaIFpBwPTs9ivIg0mk4mbf/xAQtglbFzcyN/g7XTr2dro6f2mPzXLF2Tj3kv8ezqM1bqmGBKuYWc8xbagPcT8e4xG1boSFe1IMT/3VO7sCoVCkZtkqKCklO/n5EBSymtCiDbAJLQo6LfRUsivEEKsB6aiKSo98DNanD/Ff0Cn0+HZbgB3dy7F9ZX2j6xfRXhSRXhyJyKOrQev8NcBJ26cdsHHfT+l9key/kIQRr0NNrZ6uvYJUEpKoVA8EbKUUfdZ5mX14ssuJmMykce34+LfwOJckRFGo4mTQbf5c8dR8hw+yB37CmYvP2jQrCTVy7uozb0KhSJHyMyLL6vpNhTPOXe2/879fWuIu3IazzYfZ1pXr9fhX7IA/iWbcrp2BVYuOIzRaMQIHN23G8PMTeQtXw6vpo1xrxOAIZ0NhwqFQvG4KAX1kpCnuD9Rx7fjUil7OWfKlffGpV8ddu+9zJ+ngrFL3k+CQUfEqdNEnDpN0Jx5ULMxMYXLUapGKWX+UygUOUaWFJQQohGwV0oZl8vyKHIJx+KVKNpvZqqIFIn3wrB1TT9emDVFfd3o4utGhSvuTNixj9PCQOlLidQNsSf+nonDwa4Yr9xg7/7rvF7DnvJt6qkEiYoXmqtXr1K0aNGnLcYLT1bTbSwDSuemIIrcx1o5xd8IImT2AG5v+jndVB7pUdHHh5/eHIWLoSSnStszuxEcqlITo94AOj1Gk46Tm/dzsFtPzn8/g4izUqX1UOQYQggqVar0UIig7t27Z7uv7KSHT8uZM2fo2LHjf2qryB5ZNfFdACoBx3NRFsUTJPHOdUwmI6bkpEc6TViTz8mJmZ0GMfnPFQTe384Fj/MUv+2OAQN6vZ7C3o4YT8dzc+s2bm7dhntALcoMHZKLV6J4mViyZAlly5Z97H7+S3r4FCIiIrIUdFXx+GRVQZ0HFgghhgEXSRMCSUqpHieeM5zLvYJt/kLYejzwxou5dAxTUiKOflUyVVp6vZ7PW3Zkw9ES/HrqNy6V2Y/rlRp0alWNOrVaE3stlLC/t3Jz6z/kLVfO0i7+djix166Rr2IFdPos58pUKLLEqlWr2LRpE56enmzatAk3NzfGjRvHpk2b2LBhA66urowfP57atWuzatUqfv31V9auXcuqVatYtmwZAJcuXeLXX39Fp9PxzTffcO7cOSIjI6lcuTITJ07E3t6eDz74gPj4eKpUqcLmzZtxdXVl2rRpbN68maSkJBo3bszQoUNxdHTkzp07DBs2jMOHD+Pk5ERAQACjR4+2RCRXZE5WFVQSWd+Qq3hOSMknlcLdHUuIv3aOAm3741Kh3iPbt6pcnTLeRZi4YRlB0QYmrzxOb6OJM6a/KFq9MA3e+AY3+wfxfm9s/pOQ5Svxfr0VJXpm3yyjeDJ0XJpxBtVe1d+mid+rAPx9cRc/B/6eYd1lnR6kafh8ywQu3b2aaZ2cYOfOnXz55ZeMGzeOr776ih49ejB69GhGjhzJtGnTmDRpEqtWrXqo3ZEjR5gzZw5Vq1bFycmJFi1a0KFDB+bOnUtUVBT9+vVjzpw5jB49mjlz5tCvXz9LGvZx48Zx5swZVq5cib29PUOHDmXcuHFMmDCBGTNm4OLiwt69e4mOjubdd99l8+bNtGvXLkev+0UlSwoqpzftKp49TCYjTqVrYkpOxqn0g/D6Uaf3gE6HU+ka6NIJeeTnVZBZ737EvD9OsmHPJWZu2I1DxcPsu3qY5afWU6VgearmqYHDfVdcdPmw8/DAPaCWpX3EmbMkRUbiVq0qOkPWTY2Kl5O3337bkuoihWHDhtG+vbYh3cvLy7K2VKtWLdatW0enTlrm3nr16rFy5cPZfuFBevgU5syZQ6FChUhMTOTGjRu4ubmlm1o9JS38woULLRlqBw0aRKtWrRgzZgzOzs7s2bOHLVu2UKdOHdasWYNeWQ+yTJbdzIUQtYBBaM4Sr6Pli7okpVyeS7IpniA6nR7XOm/gWucNS5nJZOTOP7+RdO8mBTuPwNGvSrptbW309HnTn9I+bsxYcZT4s9XJVyyMRMdQzpwLIU4WQWcMQ2+AjkNGkrf0A7Pi1aXLuXfkKC5CID4fhL27e65fqyJzsjqraeL3qmU29Si+afZwyvj/wu+//57pGpSrq6vlvcFgwMXFxXKs1+sxGo3ptkubHv7kyZP07t2byMhISpUqRWxsLPnzP5zG5lFp4fv164der+fHH39k8ODBVKtWjbFjx1oy9CoyJ0uqXAjxGrANuIsW1NUWTbn9Zk7jrngRMSaTr+br5PGrQp7i/pbi+wc3EnlsG8bE1HGEG1UvypRP6uFp68PdE+XhdGP8dbXRGfXo0GFMNnE9ONLyj2w0GnGtXAm7/PmJlJJjn37G/ZPp5sdUKLJEdtK8Z9QuLCyMwYMHM378eHbv3s38+fOpUCH9HGnWaeEDAwMJDAxk7969rFmzBh8fH86dO0fnzp3ZtGkT27ZtI3/+/IwdO/Y/yfgyktW55li07Lq90dajkFJOQAv0qly0XlB0Blvy1XgN784jHuSeSkrg7s6l3Fo/I93cU8UL5ePbAfWpXtaLqEg9gae1J1d0YLDR41e6IAAJSQn03zSGLT5xeHw5iHz+FUm8f5+TI8dwbe065Z6ueGpERUVhMpksjgz79u1j7dq1Fs89Ozs7S/r1R6WF//XXXxk/fjzR0dG4u7vj4OBAvnz5ntq1PW9kVUGVBf5Op3wrUCznxFE8D+Rv3BWXSo2wL/jATBFz4TDJsVoKL2dHO0Z2r8XbzQTROjhlTEJXwIlO3WtZIk0cDztLWNQtNp3/h8/3Teev5oXwatsajEYu/7KAc1O+JTn2UfkyFS8bnTt3fmgfVPXq1XN0DD8/Pz755BN69OhBjRo1+Pbbb+nSpQsXL17EZDIhhKBs2bLUqlULKWWmaeGHDRuG0WikYcOG1K5dm4iICIYPzxlz58tAloLFCiEkMEJKuVwIEQlUklIGCSF6A59KKcvktqCZyOaLChb7VIm7dp7QRSOwcXGncI/JGBweJFkOPBPGlMWHiI5NpJCHE8O71aSYt+bZF3TnCtuC9rAj+ADxSfEUzluQD+1qEv7zbxjj4nD0KUqZoUPIU7jQ07o0hUKRy/zXlO/WjAdmm/dBGYDWQohpaGkzJuegrIrnEINTPuwKFMPRr0oq5QRQvawX3w6oj693XkJvRzPo+53sOqKZBkvk96Fn9S4MLPsxfuGVuXMtjvH3tmAY0p08RQoTc+UqxwZ/TviBf5/GZSkUiqdMlhSUlHIhmtdec7QkhV8CtYG3pZTzck88xfOArasnhd4bh3vTbpay5JgITMmazd7bw4nJn7xKg2pFiE9IZtJvgcxde5KkZCNXL99l00KJY1Bh/M7VgbsO6AsWwH/yN7gH1CY5JoazE74heNFiTMlZC8mkUCheDLLsZi6l/BP4MxdlUTzH6G3sLO9NSYncWDYRdDq83vwMGxc3HOxsGNilKsLHjblrT7J250UuXrtHI193kpOMmEygM+po59mO6oU1j0Hx+WCurlrD1d9+5/buvRR+sx02Tk4ZiaBQKF4wMlRQQggD8DnwFhAPrAamSSmTnpBsiueUpIjbJEXcBp0+VUgjnU5H67olKFE4H98sPMjJi+GEX4+kmEGPMdmIwUZPdf8HMYnl7YvMcDjCh4N6UaxIaaWcFIqXjMxMfEOBYcC/wCHgC+CHJyGU4vnGNr83RXpMwbvTcAxOmkttckwECeGhAJQr7s63nzagXPH8XI9J4LQxibzF3Xitc+VU+aTWy62ERd1i3PU/2J/8IExO0Nz5hP299clelEKheOJkpqC6Al2llH2klB+hzaS6CiFUnA7FIzE45cPO88EOhIjDWwj56WPu7FgCQP68Doz/8BXavFqCCKOJv4NuM3LRQb6YtYedR0JISEymf0B3mvnVI8mYxOzAxfx08DfCT53k+rr1XJz1M3FhD4eeUSgULw6ZrUEVR5s9pbANcAAKAqG5KZTixcOUlIjO1h6HIuJBWdRt3g1woW6lV9m8/zK7j4Vy/MJtjl+4jYujLQ2rF6VZrVZ4JhTmr4OH2Bd5imCfEHr26oazvRMOXp6ZjKhQKJ53MlNQtpijRgBIKZOFELFoSkqhyBb5G3TBNaAtOqukiff3ryMicCPeDd/h0y5v8kG7iuw4HMKW/cEEhd7nj51BbN0ZRFmdgQKmUnjoSxDEfr73DmRao1GWfsL3HSApOgqPV+tisLdPb3iFQvEckmUvvpxCCOGKlvhwlJRygfl4LtAUiELbEDz/SculyH309qnTwOvtHNDbO5KnhBaE1jmPLU1L6WnsW4iQ5Eps+fcKJ/+9CskmQIfOaKAU5WhVtQoGc+il2Os3OPfd9xjj4rg0bwEF6r+KV9MmOPupYJwKxfPOo9aTGgshXkt5mes3sC4zl2eHn4DCVsezgGTAG2gFfC2EqJ/NPhXPIfkbvoPPgHmp8lLd3b2c0AXDKBC2j75vVWLQB7XQ6/WYMJGMCWOcL6VdH5gJTyWHUeT9rjiXLkVyTAw3Nv3JsYGfcXTgZ1zftJmk6OincWmKHKZnz56W0Ebly5enQoUKluOePXtmu78DBw5kGCJp1KhRTJ786PgDQgjOnDmTrXF//vlnhBDs2LEjVXlgYGCqdB9p6dq1KwsWLAC0z2Lx4sXZGvd55VEzqPQ+hblpjk1o0SUeiRDiPSAvcMJ87IjmfFFeShkDHBVCzAF6ATsy7EjxwmC9fwrANn8hDM5uOAktZ5RfqQJ0ecubIyfC2XQxnluX7jDwux0M71aTaMMNpuz9mSLJvtSp244Kb+TF5vR+bv2zg+iLQQRdDOLyL7/iUbcOXs2a4lJG/Odo14qny9y5D352hg4diouLC1988UWujJVb0cZNJhPLli2jQ4cOLFy4kPr1HzyHV69enZ07d2apH+vP4kUnQwUlpcxRbz0hRHFgNFAH2GwuLo2m4M5bVT0LtMnJsRXPD/kbvI1bvU6pUs47nltNtbDT1H69N5P22nL5egSDvt/Je+2K4WMsgePhkpww3uSEPozSrQvRvOM0ko+eJuyvrdw/foKb27Zzc9t28hQpglezxng2bIhtXpdMpHi52dO2fbbqO/mVoPK0BzOOlPavrH2QHPDowM+Ivhj0UFvrOo9DSjy3gwcPkjevFuuxa9euNG7cmG7dutG1a1cKFy7M7t27KV68OB999JGlbWxsLB988AHu7u5MnTqVESNGWBTgsWPHGDt2LMHBwXh4ePDWW2+lmrFt3ryZgQMHcuPGDRo0aMCECRPIkydPujLu2bMHk8nE4MGDadCgAUFBQZa8UAcOHLBk6T1w4ACjRo2iePHiHDp0iClTpqTqJ+11Va1alZ07dxIcHEyZMmX46quv8PPzA2Dr1q1Mnz6d0NBQSpYsyahRoyhXrlyOfOZPggyVkBCiZHY7E0KUyqDcAPwGDJZS3rA65QzESSmtI9bGAKkXKxQvFdbKyWQy4lCsArbuhSlc7VVLyKRSpsvsXr0Tr5vV0Rv16NCDUceuwyfpt3kUK/MEU+GrMVT96UcKt38DWzdXYkNCuPzLr8Rdv/4Ur07xtDh27BgbN25k5syZlrL4+Hj69u2Lh4cHU6dOxcYm9TP7iBEjaN++PYGBgUyfPp2ZM2dy9eqDPXmHDx9m2bJl/Pnnnxw6dCjddPIpLF26lA4dOuDq6kqLFi347bffMqx7+fJlGjRowK5duwgICMj0utasWcO0adPYuXMnefLk4YcftO2qJ06cYPDgwQwbNoz9+/fTpUsXunfvTkRERKb9PUtkZuJbJIQ4CvwgpTydWSdCiMpouaEqArXSqTISkFLKtHcvGnAQQuislJQjmrOEQoFOpyd/vU64vdoRnU6HA/Bp5yrIG3Owj73F3BA77HXe6AG9wYBPCTfuxF/C3qCZDvN4e1Pw7Q44tW2G/swl7h09hnPpB89R56f/iENBL7xbvYaNs4pUAY8/q0mvvfUM62nRoEEDy+wKIDk5mY8//piIiAjmzp37UCp5AGdnZ7Zv346Pjw81atQgMDAwVcr2vn374uLigouLCzVq1CAkJCTdsW/dusWuXbsYPXo0AF26dKFbt24MHDgQZ2fndNu8/vrrlpxUmdGmTRuKF9fWcZs3b86SJdpewxUrVtCmTRuLgmvbti2///47mzdvpmPHjo/s91kgMwX1CtAf+EcIcRfNLHcKuA3ogAJAJaA+4I4W1bx3Bn11BgoJId40H7sAM4El5r6KAynz/zJApgpR8fJhvXakMyXjXbs5t08eIDSpMHERiXjZ29KhtaBunVbciU1totp7JZDZBxdTqWBZGreuSzGTERudgbgbN7i57R/0dnZ4t37g62MymdRa1QuIl5dXquOYmBgSEhI4f/4858+fp0yZh7MGfffdd3z33XcMHTqUiIgIWrZsyciRIy1KxTrFvK2tLUlJ6UeCW7FiBQkJCbRt2zbV+CtXruS99957qL6zszNOWQzt5e7ubnlvY2NDsjmocmhoKAcOHGDDhg2W80lJSYSGPj/bWDNbgzIC3wohZqJFMn8NbW3ICzACN9BCIH0NrJBSZphdLm2+KPPM7Duzm7kzMFEI0QPwAz4Auj3ORSlebHQGW1zrvIFrnTf4NiKObxYFcvnSNWz//oq9IU2o/dbbqZ5yw2PuYtAbOHrjNEdvnCafvQv1iwfQyDeA8l+OIjb0uiXOnzExkeOfDcWtWlU8mzQmj3fBp3WZimyQMvtJyXoLcO/evUzbODo6Mm/ePCZNmsTw4cNZtmxZKhNfUlISQUFBjB07FltbW06fPs3gwYNZuHAhffv2zbJsRqOR5cuXM378eOrWrWspX7NmDYsXL+bdd999qE1OPCB5enry3nvvMWjQIEvZ5cuX8fDweOy+nxSPdISQUsZLKRdIKTtKKUtIKZ2klC5SylJSys5SykWZKacs0BtN4QUDG4HxUspNj9Gf4iXCLa8D4/rUoWu5GAoYIok7s4vvlxwiPvFBao7azq/QPW8f2nu/QZG83tyPj+SPs1sYsPlLVhnP4v1aC0vde0ePEX3pMiErVnG4Tz9OjhzDrZ27MCYkPI3LU2QRd3d3XFxcWLNmDcnJyWzatImLFy9m2sZgMGAwGOjfvz93797ll19+eej88OHDWbBgAcnJyRQsWBC9Xp/tlO27du0iIiKCVq1aUaBAAcvrrbfeIjQ09CGX85yiXbt2rFixgmPHjmEymdi3bx9t2rTh5MmTuTJebvDEN+oCSCkrW72/izZDUyj+EzYGPa26v8+/GzxYvCeGm4dCuXQ9mmHdapAYmcCin/aRnKRFS/+090fEutzj76Dd7LtyCF/Xoqn6cqtejYoTxxH219/c3r2X+8dPcP/4CWxcnCnQoD4FmzXB0cfnKV2pIiPs7OyYMGECU6dOZcaMGTRs2JCmTZtmqa2joyOjRo2if//+KZldAW0WM336dMaPH8+sWbOws7OjdevWdOrUKVuyLV26lGbNmmFnl3pLhZubG40aNWLRokX06tUrW31mhRo1ajBixAhGjBhBSEgInp6ejB07ltq1a+f4WLlFllK+P8uolO8Kay5fj2DC/H+5Hh5NO5dj5C1ci7MyUcs3pYOGLctQt7HmoBqTGIuNzoCdeS/W5vPbKZLXmwpe2kbgpKhobu3aRdiffxN96ZJlDBdRGq9mTfB4pQ6GDFyKFQpF1sgs5ftTmUEpFLmFr3depn1an9/nr6Lh3WOEXrvBWd1r6ACDjZ5ifg8WlB1tHyiXC+GXmX9kGQDv+LfjddEUG2cnvFu2wLtlC6IuBhG25S9u7dhFpDxHpDzHpbnz8ahXl+Lvv6cUlUKRC6jUGYoXDuc8tvTo/RYhhZuwK6E4p4zJ3He0wadmEVzc099iV8LNh3ZlmmMymfjt2Gq+3TuX2MS4B336lcDvw97UWDCXkp/0w6VsGZJjY7l/4iT6LLgCKxSK7JPlGZQQwg+4JaWMEEI0BNoD/0opF+aadArFf8RgMFCv24c4nQ1DLjuKvB9HzP6D7DlwGJ9y5Whey5dKpQtg0GveUnq9ni7+bSnp7suPBxawP+QwVyNCGfxKbwrnfeDJZ3BwwKtxI7waNyLmaggJd+9aPK6SY2NJkULeQwAAIABJREFUvP//7N13XFbl+8DxzzPYe4OKLOHgQsWBC8UBzrJM04Zp2q9sT/tmw8q+ZaaplU0r62t7mJWWCwcqbnDDLbJE2UvZ63l+fzyIoIioIKj3+/XyVc855znnPkVcnftc93WdwdRVZv5JUlNo1DsoRVGmAMuBEUAKEF39pyOwQAjxbnMO8jJj80S+g5IaUFWlY/+BE5ivfxttVQkfnR3BySpHnOzMCO3jQRc3G85kFuLh44C7px2pBRks3P45p86mYaY15YWBj9DV5eI1MrXp9XqOL1xMXvQB/F+ahW1A1+t0d5J0Y2voHVRjp/hmA08IIcKBB4F4IcRA4F5gZhOOVZKanEajpleAB85demHWxofBw/viYm9OVl4Jf66L5fdv9hL+TyzffhJJUkIObaxceGf4i/Rz74mxxoi2Vpd/ItJXVKCrKEdfVYWxnd1lj5ck6fIaO8XnDZxbjjwW+Lv672MA2dZUavXURiY4jX0CfUUZHsamTBjeiUMilXV/H6U0owwVhietRct2EzjAg7C+HjzTbwY5JXnYmxuqBej0OoorSrA0vniFv9rYGP+XXqTkdCrm7oYneb1ej66sDI18RyVJV6WxASoFCKhuLtgZQzsMgDAgqRnGJUlNTqVSoTI2BAu1WkXbxNUM1Z9ggyaEyuqmiJnlFfy++QS/bz5BVx9Hwvp64GGt43RyPvGqWHYVRfJ8/4fp4OB58fnV6prgBJCxfgOnV67C/6UXsfC6+HhJkhrW2AC1APgdQ2PBjUKInYqivIKhfcb05hqcJDUXXWU5FTmncdSnMPnu9qSeMcPD255CYN3uJLYdSOVwfDYJ8dn4o0EN6NU6ihU9cza9z4zASQzzGXjJ8+t1OjLDt1CansGhF2fj8/hMnENkH05JuhKNXqirKEoPwANYK4Qore56WyyE2NucA2zEuDyRSRLSVdDrqihLi8e0rd/5bXodKpWaopIKIqJPEbEhDtOzZagwZOpZdi1ll1k4AEO9+jO952SMNUb1nr+qrIyEz78kM3wTAG5jRuH54FTURvUfL10fKSkpuLu7X/5A6bq45iQJRVE2AYlCiFVCiFIAIcRWIElRlP1NPF5Jui5Uak2d4FSaEsPpr1+iIi8dCzMjRvX34rGpvdFo1OiBKvSkpttxf+fJGGmM2JQYyevh75NdlFvv+TUmJnR48jF8Hn0ElVZL2pp/OfLq65Tl1H+8dHlRUVHMnDmToKAgevbsycSJE1m1alWjvx8TE9MsrSZmzJhBt27dyMvLq7P9s88+47nnnmvy690qLjnFpyhKCHCu9eJg4GFFUS7s09QRQwVySbrh5W75kfL0eAoOhGM/5D4A3D3tmPpYf6KjT7Pu0GlOZhWS+rMR94+fwZrTvxKfl8zy6F+YNbD+ZFaVSoXryDAsvDyJnb+AgljBwednocx6HpvON05n04akJOWRHJ9Tk6bfXDZs2MArr7zCc889x3vvvYeFhQW7du1izpw5xMbG8tJLL132HGfPnq1T8bwppKSkcOzYMYKDg/n111/r1NWbOVMmOV+LS07xKYrSFfgTQ78mD+AUhndQ5+gxNBb8QAjxVTOP85LkFJ/UVHSlReTvWY3dwAl1uvqeU1hczvs/RLEvJgOVCiaGeXLGOpr7u92JrdnlK1yX559BLHifs0eOglqN14NTcbttzA3deyolKa9OMd4pM/s1S5CqqKhg8ODBPPfcc0yYMKHOvsTERMaOHctvv/1Gx44dEUIwf/58jh8/TkFBAd27d2fevHmYmJgwZMgQysrKMDc3Z+3ateh0Ov773/9y9OhRcnNzURSFt956C39/f1auXMkvv/xSc41vv/223p5RixYtIisri1GjRjFnzhzCw8Nr2n989NFHxMTE8Mknn/DRRx9x+PBh0tLSyM3Nxdvbm6CgoJr286NGjSIwMJC3334bgOnTpzNq1CjGjRvHe++9R0REBJmZmTg5OfHMM88wZswYXnvtNUpLS1mw4HxDyNDQUGbPno2Pjw+vvPIKsbGx2NraEhoayqxZs+q0omkNrmqKTwhxuLq9hhewFegmhPCq9cdbCBHQksFJkpqS2tQC+0GTaoKTrrKcnI3fUlVimDiwNDfmtelB3BtmKCb7y7ok8o91JOtkOdvDT3AyIYeVx/6luKL+7jPGtjZ0mfs6be8cBzodiV8t5/iiJVSVltZ7/I0gOT6Hqkodej1UVepIjs9plutERUWRl5fH7bffftE+Ly8vAgMD2bhxIwBPPfUU/fv3JyIigm3btqHT6Vi2bBkODg4sW7YMKysroqOjcXFx4ZVXXsHNzY0NGzawZ88e2rdvz6JFi2rOHR0dzWOPPUZ4eDiKolx07YqKClauXMnEiRMZOHAgGo2GDRs2XPI+du7cyYIFC1i7di233347kZGRAGRkZNQ0GARDM8P9+/cTEhLC119/zZEjR/j111+JiorigQceYM6cOVRWVjJu3DjCw8MpKysDDG3tCwoKCA4OZt68efTo0YM9e/awYsUK1qxZw759+67+X0ILaFQWnxBiSHMPRJJam9zN33N2z2rKM5Nwu9fQqlutVnHPCH9829ux8Pv9HDmaTuXRLNQqUKnhhN8OIpJ288KAR2hn43bROVUaDZ7THsDS15e4D5eSHbGdsoxMus5/54Z8kvLwcUCjVdc8QdUuxtuUsrKysLOzu6hlxTnOzs5kZWUBsGzZMtq0aUNFRQXp6enY2dmRmZlZ7/fefvvtmq64qamp2NjY1OkjZWdnx6BBgy45rvDwcOzt7QkMDARg0qRJfPfdd4wcObLe4/38/GqewkJCQnjzzTcpLCwkMjKSsLAwwsPDSU1NJSYmBkVRcHJyYvLkydx9991YW1uTkZGBmZkZhYWFlJSU0LNnT2xtbdmyZQsjRoxg9erVjB49GiMjIywtLdmzZw+bNm2ib9++bNmypdU9PV1OowKUoiidgGUYWrxfVLZZCHHxfIgk3eBseo+hPC0e+6EXdzzt1dGFxc8MZvHS7agKykGvQq+DthVenCiIZvbG+TzWZwr93HvWe27HAf0wb+9O7Lz5mLm71wQnXUUFFfn5mDg5Neu9NRV3TzumzOzX7O+gnJycyMvLo6ysDBMTk4v2Z2Vl1WTmHTlyhEceeYSCggJ8fX0pKSnB3t6+3vMmJSWxYMEC0tLS8PHxwcTEhNqvPZydG65D8PPPP5OcnMyAAQMAQxfe/Px8YmNj650OrH0+JycnFEVhz549REZG0r9/f/Lz89m9ezfR0dE1vakKCwuZO3cuBw8epG3btnh5eQGGheAqlYrbbruNNWvWEBoayr///svHH38MwBtvvMGSJUt45513yMjIIDg4mLlz5172nlqTxobTr6uPfQRD2/cL/0jSTcfI1hm3KW9h4upVs60k6TD6KsNLdjdHCx65LxCVSoUePVV6PW4WAfR370VZZRmLI79kxYHfqdJV1Xt+c/d2BCx8j/aTJ9Zsy9m5i33/9yiJXy1v3ptrQu6edgwc1qFZEyQCAwOxs7Ork7G3du1aYmJiSElJISoqiqFDh5KRkcELL7zA22+/zfbt21m+fDldunSp95wVFRU89thjzJgxg507d/Ldd98RHBxc55iGnmpPnjzJ3r17WblyJatWrWLVqlWsXr2aYcOG8b//1V9D+8LzDRkyhB07drB792769u1Lv3792LVrFxEREQwdOhSA119/nXbt2rFjxw5WrlzJjBkz6pxj3LhxREREEBkZibm5Od26dQMgNjaWp556ik2bNvH3339TUFDABx98cMn7aY0au1C3GxAohIhpzsFIUmtT+xdKSfJR0n6Yi0lbP9rc/wYqjRE+vk48+Hh/1m06weaYdKIOZtCpwI+7g9vxe+xf/C02kpiQxRDroXh2cLrol7jW3Ayt+flJidKMTFQaDaZt2tRsK8vJQVdWhlmtbbcaIyMj5s6dy+zZs9HpdIwZM4acnBxeffVVTE1NmTBhAgEBAcTHx6PX6zGtLi+1c+dO/vzzT7p3NzTxNjY2pry8nLKyMiorKykrK6s59ujRo/zvf/+r+Xw5P//8M3379sXHp24i84QJE3jmmWeYNWvWZc8REhLCjBkzsLGxwc3NjX79+vHhhx/i6OiIr68vAAUFBZiYmKBWq8nMzOT9998HqMlG9Pb2xsfHhwULFtR5R7do0SI6derEiy++iIuLC0ZGRlfcrr6lNfYJKh6o/xlZkm4RKiMTNJZ2mLr7o6q1ONfdy56HZvThlccHYG9twrGEXP7+A6b6z8CpvC3sbMOWtcdZ8dlOUhJzKa0su+Q13CfeRe/ly3Aecr7qROpfq4l69EkOvzKHzC0RVJVd+vs3s+HDh/PFF1+wZcsWQkNDef/992nfvj3BwcHs3LmTf/75Bx8fH5566ilmzJhB7969Wbx4Mffcc09N4FIUhY4dOxIUFMSpU6eYO3cub775Jj179mT27NlMmjSJ1NRUioqKGhxLeXk5K1euZOzYsRftGzRoEFZWVjUZgA3p3LkzxsbGNW3Y/f39MTU1rXl6AnjllVfYvn07PXv2ZPLkyfTu3Rs7OzuOHz9ec8y4ceOIjY2tE6Deffdd4uPj6d+/PyEhITg5OfHYY49ddkytSUNp5rUXaYzEUH/vP0ACddPNEUIca64BXo5MM5eup6riAtSm5jWZflWlRahNzGuetPLOljJ/xT6OJuSg1agI87MjK/YMVLec7xzsyJ+VPzPAozfDvQfgZdf+sskRicu/Jf3fdeiqA5PW0hKnwYNwCRuGhadns97vjSIhIYFTp041mNBwM9uwYQNff/01P/74Y0sP5Yo1lGbeUIDSYVjrdKn/es7t07dkkoQMUFJL0VWUkfrNyxg5tsV53NM1QauySsfyv4/y17YELIBOKk1Ny/m2YTrWZK2pOYc3fvjRmeDArvj6Xpz1d05lURHZ23aQvn4jRbWyzCx9fXEJG47z0BDU2kb3H5VuEgUFBZw+fZrXXnuNe+65h/Hjx7f0kK5YQwGqoZ9orwb2XRVFUcYC71SfOxN4TwjxuaIoxsBSYAKGp7NFQoh5TX19SWpK5ZnJVOSnY3g8Oj9brtWo+b87uuLX3o6Pfj3AsfIqbNVqvL3sCGzvS0hgDzYnRrL7UAymR7xJ0ZXy/b49tAmr4uHQ+n/BaC0scB0ZhuvIMAoTEshYH05WRASFcXEUxsWRtXkLyqznMbaXvahuJYmJiTzwwAMMGjSIcePGtfRwmlyji8VeK0VR3IBE4E4hxL+KogQCO4ABwESgP3AHYAOsBd5pTDt5+QQltaTy7FOG2n2+vQCoKikgdcVrWHUZhE2/O0lOL+Drv45wIC6Lc/+ptXG0IDTIA8vicvZsSQQ96NHhEKjnifsMv2RKKkqpqKrA2tTqkteuKisjZ8dOkld8T3luLkZ2dvj/5wWsOzbc/VeSWpOrfYKqoShKIoYpvQvpgXLgNPBjQ1UlhBBpiqI4CSEKFEVRAw5AJVAATAWmCSHygDxFURZiSGm/bICSpJZk7NgOY8fz/2NUFLOTiqwUSpKOYNt/PJ5u1sx9pD9p2QWE7z3Fhj0nSc0u4ts1x7BWqVBQgwq0Gi1De51vE785MZIVB1fSu003hnoPIMDVH7Wqbk6TxsQE56Eh2AZ2RyxYxNkjRznyyhx6LF1yS2f8STePxk5afwjMxTANt7N6Wx/gSeBLIA2YqyiKjRBiUf2ngOrgZA6cqb72fCALcANqJ1rEAl0vPoMktW5W3YehtXFCbXw+dbwiL53yH+YwJjCMe14dz36RyfpdyeyNyeCYrgprVKhNtRxIKsLRqRhne3OyinLR6XXsOhXFrlNROJnbM8S7P0O8+uNgXncaz9jWls5vziH5f9+hr6qSwUm6aTQ2QE0BZgohvq+17S9FUQ4B/xFC9Kz++0+BSwaoaqWABRAA/AOcK1xWXOuYYsC8kWOTpFZDpdZg7tOjzrai2F1UFeRQkZuKRqOmTydXend0ISevkM3RaazfnczpnGJ+XC/4aYOgh+JMWFB/Phw1lO0nd7EpMZKsohx+ObKaX4+u4c6OI5jcte77BrVWi9f0aXWqIBQlJaM2McHMzfW63LskNbXGBih/oL4qgwc535IjFsOTUIOEEDoM04L7FEX5AuhVvat2CSVzDJXSJemGZ9N3HCZtfdGYnX+fVJYaR+Ev8xjeewx3vXQXh+OzWb87mchDaUTFZhIVm4mtpQkDfF0YZTUZyw4VRJftZ8/pA7SzPv+ElFmYjU6vw9XKUL7mXMp6RUEBMe+8S2VhEV3++waW3t7X9Z4lqSk0NkDtB2YpijJTCFEJoCiKFpiFIUgBDAROXuoE1R14FwkhahcnMwHygHRAwfAuCwwBscXWVklSU1KpVJi171xnW/GJ/eiKz6IrK0KtVtHN14kAH3vOjlXYeiiTdbuTyUkvIC06lQxArVbzwKN3MqPnZMy052vRrTz2L5sTdzKuYxiTu9xeUwxUpVZj4elBeU4u5rWSh3SVlTIdXbphNPYn9QlgHXBSUZSDGCpQnHtHNKa6ueE3wP81cI4DQFtFUZ4DPgCCgBnAnRgC1OvV04SWwAvVx0jSTclu0GTMfXujtThfeqY4bj+5f39EcL87uO2F8az6/TCHdxr+n0+n0/HVj9E891QwRibnq1gYaYxABati1pGQe5Kn+k3H2sQSrYUF/i+9SFVxMerqCuDFKac4PPtVnIcMxiV0OObtZdtzqXVrVKkjIcRBwA94AzgBHAVeBXyEENFAEtBLCPFtA+c4A4wGxgO5wBfAQ9Wt4+cAR6rPuxf4Hfjsqu5Ikm4AKpUK0zYd0Nqcr1peeioGfVkxKo0WlUpFr17uaI0MWX56VBzPLeLZxVsQyedbxoc5jOBukyk4lrXhUEYMs9fPIyE32XANtRqtpWXNsbl791FZUEDqX6uJfvIZDv3nZTI2brqh+1FJN7frtg6quch1UNLNpDzzJBoru5r3VbHr1nI8ch/te3bnh2QbYpJy0WrUPHxnV7q4WrPi812GXkwaNUU9TxCnj8FIrWVGz3sY6t2/zrn1ej2FJ+LJ2BBOdsQ2qkoM+UkaC3N8HnkYp8HBF41HkprbVa2DUhQlE+gkhMhWFCWL+tdBASCEuHEajEhSK2bs3L7OZ0dOYWwcjZNHf94ePYCv/z7C6u2JfPLbQQa2tT3fzbZKR5jdCDzsHNkYv43jOQkXBSiVSoWVbwesfDvg9eADZO/YScb6DRSI4xxftISC48fxfHCqfEcltRoN/STOwrCI9tzf39iPWpJ0A3Ic8RCWXQZj2tbQeuGROwPwc7dh6W+HiT6dT0eVBrXKUOfP29eZwZ730t21E93dDEkZKUl5JJ3IxrODY51WHxozM1yGD8V52BDS164j8cvlpK3+h6KERFkySWo15BSfJN1AKgvySPvhDSp6TGDexlIKcopxNNJy5yh/hg2u25coJSmPFZ/tpKKiCrVGxfgZAXRW2td73rOxAjF/oSyZJF13VzvF915jLyCEePGqRydJUqOd3b+WiuxTmMaFs+jp2Sz6MZp9MRl88PcRsisqmTjUD7XasBYqOT6HykodKlToqnR88s+veGSaM9R7AD3cOqNRn29CYO2v0G3xgpqSSUdfn0uvZZ9idIM1uJNuLg1N8fVu5Dlu7EcwSbqB2A2ehNrMEsvOwWgtTHhtehA/bzzOj+tj+e7fWOJO5vPsPYFYmBnh4eOAVqs2BCk1lFjnsi/1BPtSD2FnZsMQr/5M6nJbzeLe2iWTTF2cZXCSWtwlA5QQYsj1HIgkSZenUqmxDbqt1mcYYRyF/wQ/5q/OYPfRdJ5bspWXp/XBw9OOKTP7kRyfg4ePA1auIWxN3MWmhB2kFWZyPDvhomaJ50om1ZZ/6DAmTk6yZJJ03TU0xRcB3C6EyK+1TSWEkE9MktRKFMVEkr/jN+zMrFj0+Pu8+8MhElPP8vyHETx9dw+Ce7StkxwxrmMYt/uHEpN1Ao36/DLI7OJckvJS6NW2W53zl6SlEfuuYba/28L5shCtdF01NMU3EDC+YNsZRVG6CyESmnFMkiQ1krlvLywDhmDm2RUrNwfeezKYj387yJb9p3jvu32Ik3lMG9sJreZ8MFKpVHRyNmQFpiTlkRiXybq8dcTpY7ij44g6JZOMrK2x6dIZlVqNqdtlS21KUpO60gUPl2r/LklSC1AbmeB82xM1n02NtTw+2IrOLh58tvYkf0bEc+JUPv+Z0gs7a9M63z2X5VdVqcNU7Y2FknHJkkm6ioqa6cCynBw0JiZ1qlRIUnNoVKkjSZJuDJVnc0j/ZR4dD3/EvCm+2FubcDQhh2cWbyUmMbfOscnxOTULfdHBWMexWJtYcigjhpcuKJmkMTEUqNWVlxPz9nwOPv8iRYlJ1/nupFuNDFCSdDNRazB2dMfYuT3+XfxY8mwInb0dyD1bysufbmfN9oSanlEePg5otGpU1Qt9+3TzZ37Yy3Sw9yS7OJfXwheyOSGyzukri4oAPaXpGRx6cTaZW7a2wE1Kt4pLLtRVFEUHDMJQ2PWcPRiKvZ6qfawQosVaY8iFupJUl15Xhb68FLWpBQDlJcX8tCaaX3dmAzCkZzsem9ANU2MtKUl5NVl+55IpKqoqWB79Kxvjt3F/tzu53T+szvmryspI+PxLMsM3AeA2ZpShRJKREZJ0pa5qoW61rVz83mlt9V/11fv0gAZJkloFlVqDqjo46fV68tcvY+Dx7XQMuZf5kUZs3n+KpLSzvDytD+6ednWy/MDQwuPhXvfSt10Purqcryah0+lQV0/3dXjyMaz8/Uj4/EvS1vxLYXwCyosvYOJgf13vVbq5NTTF5wV4V/+1vj/etf4qSVIrpCstQl9ZgUqtoXvwABY+NQg3RwvKM5KYu+Rv9sVkXPK7Aa4daxIjMotyeH7tWxzJiAUMmYCuYaF0nfdfjB0cKIgVHHxuFmeOHr0u9yXdGmQtPkm6BejKilGbmANQWFLBoaUv4lp+kq8LB9M5JIxJoUpNiaTazk0BHq06SHjeRlQqFfd2vYPb/UPPt5c/cwaxcDFnDh0GtRqvB6fidtuYixYBS1J9Gprik0kSknQLOBecACxM1Pgo3lRozYmrdOOH9YK3vt5NYXF5ne+cS0Pf/G8sOZvMGOkwEr1ez/eH/mBR5DJKKgyNDo1sbOj8xmu0HX8H6HQkfrWc44uWyEaI0jWTAUqSbjEqtQaX25/E7/mv+c+MwViZGxEVk8bGxW+ScORIzXG109CrKnX4qToza+BMzIxM2X0qmpc3zOf02XTDOTUaPKdOQfnPC6hNTcmO2I547/2WukXpJnHJAKUoiqwUKUk3MZXWiEB/ZxY9M5g7XZIIIJbsPxayZW8ScHEauoePA73bdmNe6Eu4W7txuiCdt/74nE3rj5GSlAeAY/9+dFs4HwsvT9zvmdRyNyfdFBpKM88DugkhTiqK8jXwtBCioN6DW5B8ByVJ1660uISdXy5g1WlXEipdGDvQi+m3dSH91JmL0tABSitKWbr2Z0q2OYDOEMDufiiQNu1tMDc2Q6/Toaoul6TX64lb8hHWnfxxHhKC2vjCCmrSrexq08zVwHBFUcKBqcBSRVGy6ztQCHGyicYqSVILMDU3I+TJ1yjdmcQXqw6zensiFYkHmHxPKAOHdbj4eCNTgsz6s0UnaqYAN+2NIuLAWvq592SY90AUR29UKhWFJ+LJ2rKVvP1ROA+VTRKkxmsoQH0MfMn5fk976zlGroOSpJuESqViVH8vvNra8M23/xJa/Denv1pPxvi36NzJ66LjPTs4otHGUVWpQ6NVU2qTT3lBBVuTdrE1aRdtrVwJsuiHQ6ErLlMfx8msomYxb2VREUdfn4vToGCcQgZjZG11vW9XugE01A/qZUVRlgJ2wGEgBMi5lospihIKvAv4ApnAAiHE54qi2GIIhqFAIfCqEGL5tVxLkqSr4+9hz6xHhhPzzR4SC834fflhpt+u47aB3nVSx90v6Dfl7mnHxILhbE6MZHPiTnJTS4kVJah0Sag1aqY9NqDmu9k7IimMO0Fh3AmSv/sBn0cfxnlISAvcrdSaNWodlKIog4EdQojKq72QoijuwFEM04V/Aj2BdcA9wDQMU4oPAn7V2+8WQly20Jd8ByVJzaOyooL/rTnKH9sMRWNDA+x46K6emFtaXP67uip+XbWDuB1nABWoYOgofwYO60B6YRZaHaiOxpO+dj35Bw4C4Dp6JF7Tp8mSSbeYa1oHpSjKEOBxIFFRlBJFUVIURfm1evuV8AR+EEL8IYTQCSH2AluAYcAE4DUhRLEQ4gCwDHj4Cs8vSVIT0hoZMf2O7rw4pRfmxio6Jv7I4Q+f5VRC4uW/q9YwMLArWiMNKhVoq7MAAX4+/BePr32dZZVRFP3f7Xg9+jAqrZb0f9Zy5NXXKcvJvczZpVtFgwFKUZT5wEbAGlgKPAl8gKGR4brq/Y0ihNgmhJhZ69z2QDCQhuE9Vlytw2OBro09tyRJzSe4e1vmPxSAnVEZRlXFvPHVfvYcS7/s985NAQ4Z5c+Umf1w97RDr9ejVqlRq9REpR5m4Y7PebNsM6kzQtHY28mSSVIdDaWZ3wUsB8YKISLq2T8AWA3MEEKsvJKLVq+xWgPkA+8Bq4UQ1rX2jwfeE0JcnD508bk8kVN8ktTsCvLP8O0v21gnqgCYPNyPyWF+aDRXniN1pvQsW5N2sylhB6kFhnqAZqU6Zhw2QxOXIksm3UKudorvaQzJChcFJwAhxA7gNeCpKxmMoih+wC4gA8PUXgFgqihK7Z9CcwzJEpIktRJWtjY8/n9jeGB0R9QqSN62mshFL3Im98qn5GxMrbndP5TnOz7FPWbT6Gc5AJ2FKX6vvVSnZNKBd9+RJZNuYQ0FqADg38t8/x+gW2MvpijKIGA3sAqYIIQoxTC1p8JQGf0cf6DFekxJklQ/lUrFxGF+vDmjJ6PND9G2PIkrJ+xFAAAgAElEQVRln/7Mmh2JFJZUXNG5UpLyWPH5Lo5EZFGyzZ43eryMq42roWTSiy9QYaSmeFcU3y16ibSCzGa6I6k1ayhAqS6zH8AIaFRmn6IoPhimBOcIIWYLIfQAQohC4A9gnqIoloqidAP+D1jRmPNKknT9de/YDtcH3mab8UC25rbhs5WHmPrmOv787HNidu1Cp9Nd9hwX1vpLSzpfqMY6qCfJM4aRZ6Nlh1MRL22Yx77Th8g/dJiCuBPc6F0YpMZpaKHuPuBODOuWLuWu6uMa43HACkMgmldr+8fAI8AnQDJQCrwthLjc05skSS3ItX177n32abwPp7F+dzLxJ07SKXsDbNzAC5unMrBvR4b2csfWyqTe75+r9Xduoe+5LD8AY60xU0fNpHDQfcRG/8Ce0wd4b9snPLq5EuP0PDq+9jL2vXper1uVWkhDSRKjgV+B8UKIdfXsH4/hKec2IcSmZh1lA2SShCS1Dmmn0ji+7lcyUjNZkd8bAK1GxfR2cbQLvp2Abh3QXNBzqr6W8xfS6/X8GbueXw6sot+BAjpmqRn6+Vc166XS12/ArE0brDt3kgkVN6CrqsUnhPhHUZQ5wGpFUQ5gSGzIxZByPhDoAjzfksFJkqTWw62dG24znqKqSodnbCbrdiVzSsTSuSCSvL8P8PiayQzu04HhvdvjZGcGUG/L+QupVCru6DgCH3sPPjD7iv69p9QpmZS47Gt05eWYtnHDJXQ4zkNDMLa1be7bla6Dy1aSUBSlK/AQ0AewxxCkdgKfCyFEs4/wMuQTlCS1XlmpaZz+7X32FrjwV64fAGoVBPq7EBbUnt6dXNFqLv2q+8InrNKKUkyNTGv2n0yNR795D5kbN1FenU2o0miw79MLl9Dh2Hbvhuoq0uCl66ehJyjZ8l2SpGal11Wh06s4HJ/N+t0nOX5UkFdhQjlG2FqZENqnPXcP98PUuO6EzrmOvufeUZ1b7HvOscw43tqyhKHeA5gaMJ7Cg0fIWL+R3H37oTpJw9jREZfhQ3EZPhQTJ6fret9S41xtuw1JkqRrplJr0ADd/Zzp2t6ClDNfU1Sh4tvyMGIyy/g1PI59MRm8PK0Prg7n6/xdmOWXHJ9TJ0DlluShVqnZEL+NpLwUnhvwMB1796IsJ5fMTZvJ2LCRsoxMUn76hZSff8W2R3dcw4Zj17sXaq381XcjkC3fJUm6bnQlBWg0GmyszJj37AjefXwgbRwtSEw9yzOLt7IvJqPm2Po6+tY20KMPc4e9gKO5PXG5Sby0fh5HM49j4mCP+8S76PnZx3Se+zqOwQNQaTTkR0UT++4CSk6nXu/blq6SnOKTJOm60pUWoSsvRWttCDiFRaV88FM0u45lolLBPaEKk0IV1GpVo7L8zpYV8sHOrzicEYtapebegDu4TRleJ6Ov4uxZsrZEUJiQiN8zT9Zsj//sC2y6dsGhfz+ZAdhCrqmaOYCiKFMURXG4/JGSJEkNU5ta1AQngLJdvzDdfCPTQj0A+GG94K2vd1NYXI67px0Dh3VoMNPP2sSSVwY9yR0dR6DT61gVs44zpWfrHGNkbU2b28fWCU5FiUmk/7uOuCUfUZaV1cR3KTWFxk7Efgjs4RobFkqSJNVWVXyWgkOb0ZUUMmbgBLw8+7Hw+33si8nguSURzJ7WG682Npc9j1pteHLqYO+JidYYW7PLf8fExQWvh6ZjZG2NqbNzU9yO1MQa+w5qN4aqEpIkSU1GY25N2+nzcR73NKbuHQn0d2bxsyF4t7UhLaeIFz7cxqZ9J9Hp6n8VkZKUx/bwE6Qk5QHQp113url2qtn/7/HN7EzZX29pJK25GW1uG4PT4OCabdnbd5C3P6qJ71K6Wo19gtIB7yiK8iqQCJTU3imE6NPUA5Mk6dZgZOOMkc35JxjbsnRe7hTPT24BbNyXyuIfo/lxvSC0jwfDervjYGNY5Hu5NPTk/FN8c+BX9Ho9baxcGOo9gMGeQdiYWl80BoCStDTiPliKrqIC98l34373BFRqmUfWkhoboHZX/5EkSWo2el0VmX8upiInlQeG2OHv1ZOfNgjSc4pZ8W8M36+LpXdHF8KCPChNPdtgGnp7m7ZM6z6RVTHrSC3I4LuDK/nx0Cp6te3GMO+BBLj4o64VgExdXGg38S5O/vATKT/+TOGJE/g98zTaRrS4l5qHzOKTJKlVKT0dR/7OP3C541lUWiOqdHoOHM9k/e5kdh9Jp6p6us/N3Bj3Uh3o9fU+QZ1TpasiOu0I4Qk7iEo7gl6vR6VS8enYd7A3v7gkUl5UNMffX0JlYSGmrq74z56Fhadnc9/2LatJKkkoinI3MAvwBQKBx4B0IcTCJh3tFZIBSpJubrrSIjL+WIxVQAgV7XuxeV8K63cnczqrCAvAGhWu7WwIDelA366uGGkvXdootzifLUk7yS3O56Fe99RsP56dgJ+jd83n0owMYuctoCgxEbWxMR2eeKzOuyqp6VxzgFIUZRqwEHgfQxfdLsBQYBHwjhCioZYczUoGKEm6uZ3dv5bstcsw9exKm/veAAwVzo8l5rJuVxI7DqZSXmkobWRlbszQXu6EBbWnvWv975ouFJG0m6W7vyHUJ5hpPSZipDEUoq0qKyPhsy/I3LQFALexo/F8cKqsQtHEmqLU0fPAo0KIXxVFeRlACPGloih5GAJXiwUoSZJubpadgwEVWjuXmm2VZ7OwjVjM/wWO4OE7R7J1fwrrdieTmHqWPyPi+TMino6e9vTzccROo8ZHcb7kWiqdXoeRWlunZJKDuR0aExM6PPUEln6+JH65nLTV/1CUkIgy63mM7RuuwC41jcamqPhQf2PCA4Br0w1HkiSpLrWpBdY9R2Du3b1mW+GhLZSdPk5xQjSWZkaMGejNkmcHs+jpYEb288TMRMvJpFwOhJ9g6/o4ln8cyc7dJ+s9f4hXv3pLJoGh1YfbqJF0eXsuxvb2nD0Ww4HnZnE2Jva63PutrrEBSgDD69l+NyD/TUmSdF3Z9B2H021PYtvntpptFRmJmK17iwd8c/j29RGM7NoGNSpUgF6nY/kvB3h60RbW7EiksKSizvl87D14N2w2XV38OVNWwFtbPuCv2A0166es/RW6LV6AdZfOVOTlkbF+4/W83VtWYwPUy8ASRVE+xzAtOFNRlJXAm8DrzTU4SZKk+qiNTLAKCMGkTYeabQVHIijPPEl5ZjJmJlqGhXTAyMhQbFalVlNpoiHh9Bk+W3mIqW+uY/GPURxNyDkfhC4omRSesJ2yyrKa8xvb2tJl7ut4TnsA75n/d93v+VZ0JVl8nTFk8XXGEKRigIVCiBZddi2TJCRJAtBXVlAUtxcTFy+M7N0AOLFtJ7ERkfgGBeAdMpSdh9NYvzuZg3HZNd9r62RJWJAHQ3u5Y2tlAsCeUwdws3LG3aYNABmFWZgZmWFtYlnnmlWlpRxftASbgADcxoySBWevQpP0gxJCHAWmNenIJEmSmohKa4Rlx/51tlnnR9GJSOzNvTHSahjUox3BAa6k5ZSwcV8K4XtPcjqrkOWrj7Li32MEdXYjLMiDXn7dUKvPB5tvD/zOgbSj9GnbjWE+A+ns7IdapSblp1/I3b0XXVk5bcaOBqh5IpPB6to1OkApinIPhrVPnYFy4BgwTwixoZnGJkmSdE2cxszE0r9v3anAw1upiPiZOwdPZrB/byJ3JROXU8z+5Bx2HEplx6FUnO3MGN7Hg9A+7bG3MQG9nip9FZEp+4lM2Y+LhSNDvPsz+K7RKH6+GNmcT2kviIkl7sOluAwfhvOwIRjbyYy/q9XYdVBPYkgl/xzYi+HdVT9gOvCkEOKr5hzkZcbmiZzikySpkTJWLqQoZicVQY/y+8bymlp+t98bwNHMItbvPklmbjEAahUE+rsQFtQeb08Ttp3cxaaESLKLc6v3q3my7zQGtO9dc/6EL74ibc0/hg9qNY4DB+DzyENoLS0vGovUNFN8LwEPCSF+rLXte0VR9mFIlLiiAKUoSh9gtRDCufqzMbAUmABUAYuEEPOu5JySJEmN4Xznc5QGHmXfcS1VlfGGWn4VVSSt+o7Rd/Zj4uzhHDqRxbpdyew6ksa+mAz2xWRgZ2XCsN5evNw3mOzKlJrSSR0dfWvOfSzzOPaTx9IxsDsZ6zeSu3cf2RHbKDweJ0smXYXGBigrILqe7buBRjcyVBRFBczAsLi3tjcBBcN6KxtgraIop4UQ/2vsuSVJkhpDpVJj5tkVT/LQbEqkqlKHWqXHSZeExnwEarWK7n7OdHU343igG9t2neZI+hkS80r4bVMcv22KI6CDI6FBo5kx+l5szQ1PRjq9jk/3rCCjKJuuLv4Mu38YAVPvI37hEooSEjk0azY+jz+Kc8igFv4ncONobID6GnhdUZQHhRClUBNsZgHfX8H13gTGAP8FXq21fSowTQiRB+QpirIQeASQAUqSpGbh7mnHlJn9DC3lve1xMvbHxM2nZn/M33/w525rdCotrlo1E+/qxv6TuWw7kMqhE9kcOpGNpZkRI/p6cN9Ifyp05SiOPuSWnuFwRiyHM2KxMrZg8D29CIhwpmjbbuIWf0BhXJwsmdRIl/wnpCjKXuDcCyoN0AMIVRTlMIZpuE6AM7D+Cq73mRBijqIoIbWuYwu4YUi6OCcW6HoF55UkSbpi7p52tUog2dfZl3KqlCpsobqdh6qkkidGt2fGSB+2H8tl3e5k4k+d4ffNJzh0IpvZU/vwRN9pTCufyPbkvYQn7CA5/xSrE7eyup2e2ffdQcnPq2XJpCvQUAhffcHnvy74vO1KLyaESK1n87k3h8W1thUD5ld6fkmSpKbSZfxEoj+NpKrK0M7Dw8eBnPDlFMftY9AdzzLq2RC2Rybz+5pjpKbk88ziLbx4fy+6+Tkx0jeEER0GE5+bzKaEHcRknSBg5L0Udwsidv4Czh6LYf8zz9Lppf9g06ljS99qq3XJACWEePM6jaGo+q9mtbaZA4XX6fqSJEkXcfe0Y8qj/Q1TgD4OtPOwIX1nIfrKCkxcvUhJyiPir6PYV+qwVWmIKSpnzheRTBndibuGdEClUtHBwZMODp7o9DrUKjVWih/e894g/NUXaJtZwG8rP6aD2f0M8gyS66bq0ahJUEVRtMD9GNZAmVy4Xwjx1NUOQAiRpyhKOoYkidPVm/2pO+UnSZJ03dWdAgS3e+ZQWZCL1sqe5L0najr6qtET7G3H2oQ8vl1zjOMn83hmcg/MTQ2tO9Sq81XlNDZWFD9yB9vCNxHlUcm6Pd9yMCOGR3rdh4nW+LrfY2vW2Ld0/wPGAXuA0mYYxwoMSRiHMEz5vQB80AzXkSRJuiZaK8O7Kg8fBzQaFVWVVahVOsaEuNNrsC+Lfoxi5+E0UjIKeHlaH9xdrOp839bUmmm9JlHRYzzbkvewPPpXomN28s+KrfR65gXcfbu0xG21So0NUGOBCUKIf5tpHHMwNEM8imER8BfAZ810LUmSpGt2bgow4XAi7ZxVeHb2whNY/Mxg3vlmD8npBby6eCtDO7oSEuyFh3fdFTlGGiOGeg/A18GLiLdexflUAdGff4z7wk9b5H5ao8ZWkjgB3CWEONj8Q7oyspKEJEmtSeHR7RSlHOebJIXiuFzUgB4VbXu15bYwP1wdLC76TkFeDls+nEf/mc/g4HJr/R5rikoSs4BPFEV5FUgEdLV3CiHq7wQmSZJ0C9GVFpH97+foyorp7e3Jds4lPujZuy+Fv/adpLufE2FBHvTt4oqRVgOAlZ0Dt71+vn5BZUU56z96h/5TH8XWwaWeK90aGhugtBjWJV3YpUuFYa2UpikHJUmSdCNSm1rgOullisQefH26s+vgLkOtP42GDj525MRnc+B4FgeOZ2FtYczQXu6M6udJG6e6dfo2LH0Xm62H2R31NB4vPIV/9/6XuOLNrbFTfCnAOgzFYosv3F/diqNFyCk+SZJaq5SkPBIOnsDq1Hr8QgaBVxBbo06xbncyialnATDSqpk5PoCwII+a76UmHSf6v29hm1VMpQZihnWg05jx9G3XA+ObLNOvKab47ID/XvhlSZIk6dLcPe0wP3GUM/lRlKY449g5mDEDvRnV35P4U/n8tS2RLVGn+OiXAxw/mccjd3bFSKuhjacf9h99xqb5b2ATnUDX9Sc4mPgR3wQ5cV/gXQzzGdjSt3ZdNLbl+8/A5OYciCRJ0s3IbtBknG57Auteo2q2lSYfxmzdf7nN7SwTAtpiq1Gzblcy/1m6nay8EgBMzSwY/cYC2j8yA71GQ7e4EkatTcWm7PyC3uziXIorSq77PV0vjX2CKgTeUBTlPuAEUFF7pxDi7qYemCRJ0s1AbWyKVcCQOtsKj2zn9Oliwo8XUqUvwl+j4ZSVMXHnSiZN6UU3XycA3EePxraDL7HzF9ImOxvd/K8486ItNp07s+LASqJSD9OvfU+Gew/E18HrpqpI0dgnKGvgR2AfkI+hPFHtP5IkSVIjOY1+mCJlIlV6FXo96Kp0jA90JdDPibNF5cz5PJLfN8XVtI+38vOl+6L3sAnoSkX+GY68+gan//yb4vIiyqrK2ZK4k1fDF/DC2rdYI8I5W3ZzVIprVJJEayaTJCRJuhGlJOWx4rOdNR19R7jtpo2bGVvMR/DDZsPKnb7ejvTv4EgHxRl3Tzv0VVUkf/cDp1euAsAxeAAWUyewJXU/WxN3cqasAACtWssTQdPo375ni91fY11zkoSiKKMb2i+E+OeqRydJknQLqt2Pys2mBM3Wn6jMtWXSOH+8PV359Pv9lCfkEpGQx/aNJxj3QCABXd3wnDoFS98OxH2wlOwdO3EbPYr7u93J5K63E5V6mPCE7RxKj6GDg2dL3+I1a+w7qAtbb5xTCpwCZICSJEm6QrWL0Vb4vIdeV4XaxIygLmbk9PVib0QiKkCn07H0m724+TsxIsiDPkFBdHvfnQJxHOvqdh0aPdj9vp2H+/ZBO3YKNuY2AFRWVfJ+5BeEdRhED7cbq85fowKUEKLOuypFUTQY2rN/jKHQqyRJknQNjOxc63z2JJYDamMq9SpUqChSQVRsJlGxmdhamjCstzuhQX1qjs8/eIjMTZs5e+wYgZ8urdm+JWkX+1MPE5V6hIldxjC+06g61dVbs6vqOSyEqAKOK4ryPIZGhrI1uyRJUhOpPJuDacwvDLOwp6TrFHx6dsTa0ZwtUadYtyuZlIwCft98gt83n6CLjwNhQR708fLCc/pUtBaWqNSGAFSWk4vrNxuZ1rET33GMX46s5kRuMk8GTcPCuPX3hL2qAFWLNeDYFAORJEmSDLTWDrS57w0c0hOw6X2+zNFg7UFGTOlGUpkd63Yls+3gaY7E53AkPgcLMyOGBHoS1ul8RYrMTZs5c+gwNofgcQszjrQ34kB+NC+dTeeFAQ/jYdu6E8samyTxXj2bbTAs3m2uFhySJEm3LFP3jpi6n28HX5aRRO7m71FH/oHfM1/hP7kHYwLbEbEjiWOZBYjMAlbvSGT1jkR83W0JC/JgwLDhaC0tyFi/kaKERLrElNAlBtIczrLi0Ovc/+AreLp6t+BdNqyxT1C9L/isB8qBDzH0cZIkSZKakcbUAuveY1Abm6LWGpOSlMcvX++lqqIKe62aVyf14MCpfDZHnSIuJZ+4lHy+MtYQ3L0tYc+8jE9FHpkbNpIVsQ23nBLccvJJO/AajB6J+72TUWu1rW6Rr1wHJUmSdAPaHn6Czf/GoteDCh0ho/wJHu5HWUUVkYdSWb87mSPxOTXHe7haERbkwaDOTpRF7yN9w0YKYwUAGp/2rB5gzYCuIQR79sHS+OKeVc3lqtZBKYoyqLEXEEJEXPXoJEmSpCtmaDmvpqqyCo1GjWcHQ2kkIyrpfHoVQSMHkWvZjY17ThK+N4Xk9AKW/XmEb9ao6dfVjbCHnqVzeTZx7y+iPP4kg06rWZN2iu9cVhLkHshw7wF0dPJt0aeqhqb4tlzmu7UfvWQ/KEmSpOvI0HLesNDXw8ehZj1VUewuCg9voSL7FO2mz2fa2M7cN7Ije4+ls253MtEik4jo00REn8bNwYLx9z5Fm02/QEwsHew8SdOlsj15D9uT9+Bm6cy4jiMY6t0y/agaClBWDewbCHwCuABvNOWAJEmSpMapvdD3HDOPLtgNmoyRY9uabVq1nr6KHf0D2pCZV8zGPSfZsOckaTlFfPxvAoMCbmPapEkM6NaFSYXZbEqMZEv8DtIKM0nKS7net3V+3JfaIYS4qAisoig2wHzgIQwNDIcKIZKbb3iSJEnSldBaO2AXPLHOtrytP1EkduMy4UWcHdtx7wh/JoUqbDtwmk9+O0DEoTSSMq14pU0hbZwcCStxQ9lcQfnUifTsdv5tj16vv65Tfo1eTqwoyt1ADDAOuE8IMUYGJ0mSpNYrJSmPbRtiSTp8nIrcNKoK82r2adQqQgLb8f7Tg2nnbMnJ9AKeXbKVXYdTSfnld4qTkmmXXIBWY3iOKSwv4uUN84lKPXLdxn/ZNHNFUdoDnwIjgS+BF4UQZ5p6IIqidAM+AwKABGC6EGJvU19HkiTpVlC3WnoQd48ZiZln14uOc3ex4v2nB/HBz9FEHkrj7W/2Mil4EoP7J9Pmjttrjtv24zJyy+KZn/cJEzqP5q7Oo5u9ZNIlz64oirq6lNFRwAMYJIR4pJmCkzHwJ4bOvbbA28B6RVGsm/pakiRJt4Lk+ByqKnXo9VBVqSO93KlmX1lGEuk/v0NVkeHXubmpES890JsHx3ZCrYKft51kWZYzBcWG3rRlOTlYr9rOA2tymbAhlyN//8bCTUspLG/edoANPUHtBboDSRienLpVP+VcRAjxyTWOIwQwEkIsqf78k6IoTwCTgGXXeG5JkqRbjoePAxqtuqbflIePA2B4j5Sz7ktKU2LI3/kHDsOnAaBSqRg/xBefdra8t2If0cezeHbxFl55MIi2xnpchg8jK2I7bbJKaZNVQdn+CH7beIihT71Me7fmqUbRUIByAE5ieMp6uoHj9Bgy+q5FJwzvt2qLBS5+HpUkSZIuq3a/qdpp6CqVCuc7nyNv2y/YDb7nou9183ViybMhvPu/PRw/mc8nvx9k4VOD6PD4o3hNn0b29h2cWrsWTiTSNuksNtb2zXYPDWXxeTbbVS9mCRRfsK0YaP3ldiVJklqp+tLQAbRW9jiNnnnJ7znZmfHu4wP5MyKBds6WNds1Zma4hA7HJXQ4+fEnyD6dhI2FbbOMHa69mnlTKQLMLthmDhS2wFgkSZJuCSlJeRc9YZ1jpNUwYajvJb9r69MBW58OzTq+1hKgjgHPXrDNH9lnSpIkqVnUzfJTM2Vmv3qftlpSawlQmwGVoijPAkuBuzCkm//RoqOSJEm6SV2Y5Zccn9PqAlSr6PsrhCgHRmEITLnAK8AdQoisFh2YJEnSTepclp9KRZ0sv9aktTxBIYQ4gqHGnyRJktTMLpXl15q0mgAlSZIkXV+XyvJrLVrFFJ8kSZIkXUgGKEmSJKlVkgFKkiRJapVkgJIkSZJapZshSUIDkJ6e3tLjkCRJkq5Qrd/dmgv33QwByg3gvvvua+lxSJIkSVfPDYivveFmCFB7gWAgDahq4bFIkiRJV0aDIThd1KBWpdfrr/9wJEmSJOkyZJKEJEmS1CrJACVJkiS1SjJASZIkSa2SDFCSJElSqyQDlCRJktQqyQAlSZIktUoyQEmSJEmtkgxQkiRJUqt0M1SSuCaKonQDPgMCgARguhDiohXNUl2KovQBVgshnKs/GwNLgQkYKnosEkLMa8EhtkqKooQC7wK+QCawQAjxuaIotsCXQChQCLwqhFjeciNtfRRFGQu8A3hh+Gf3XvU/O/mzdwWqf9YOAXOEEN+05p+9W/oJqvoH+0/gZ8AWeBtYryiKdYsOrBVTFEWlKMpDwHrAuNauNwEF8AF6A1MVRXmgBYbYaimK4g78DvwXw8/bPcA8RVFGAJ9i+OXqBowB3lUUZXBLjbW1URTFDfgN+I8QwgqYCCxRFCUQ+bN3pT4D2tb63Gp/9m7pAAWEAEZCiCVCiAohxE/AUWBSyw6rVXsTeBTDL9napgJvCyHyhBBJwELgkes8ttbOE/hBCPGHEEJX/aS+BRiG4f/+XxNCFAshDgDLgIdbbKStjBAiDXASQvyrKIoacAAqgQLkz16jKYoyFbAGDld/NqcV/+zd6gGqExBzwbZYoGsLjOVG8ZkQoiew7//bu/9YLcs6juNvpg3iR2xmOiozrPFh5aJIyz8qmta0aDPMpjmJlrZZWKaTNZIkdaflyqgMZzaXAf5oETJ/t2WstRp1RNQc8emH6ayGEYgpJ6QF/fG9Hrh4dh44h/PrZs/3tZ2d577v676fi2v3eb5c130917e1owwRTAM2VeWyHdvY/pXtS1rbko5h/0LHe4E/VcWz/drYfrF8oL5M9OCXA1vJe29AJE0HlgKfrnbPoMH3Xrc/g5oM9LXt6wMmjkFdjgi2/9HP7snld92W2Y4HIWkqcA/wW2ADsMt2vXJztl//dgGTiGfGDwD/Kfvz3jsISUcBq4ArbW+R1Do0mQbfe93eg9oJvLJt30TiQWEauJ3ld92W2Y4dSJoBrAeeI4ZXXgQmSBpXFcv260cZGt1t+xHgFuCUcijvvYP7CmDba9r276TB9163B6hNxMPV2kwOHC5Ih2D7eWALB7ZltmM/JL2P6DWtBc61vYsYXhlHzE5ryfarSJojaUPb7vFA3nsDcz5wrqQdknYQQ3g3AZ+nwfdetw/xrQPGSbqcmKb6MWLo4O4xrdWRaSWwVNITxLDBlcB3xrZKzSLpTcB9wFW2b2ztt/2SpLuJGX0XEbPRPgN8akwq2kyPAa+TdAVxX70buAiYRwSovPcOwvbMelvSY8C3yzTzyTT03uvqHpTt3cCHiMC0HbgK+KjtrWNasSPT1cCTxCzIXmI69c1jWqPmWQhMIT4MXqp+ridmne0BniGerUM1kgQAAAS0SURBVPTYfnAM69ootl8APgycQ/yt3gJcbPuX5L03VI299zKjbkoppUbq6h5USiml5soAlVJKqZEyQKWUUmqkDFAppZQaKQNUSimlRsoAlVJKqZG6/Yu6Ke0j6TZiZexOriFWH18HTLE9KsvBlHXUfg180vYf+zl+KbHG2htHuB7fA3pt/2gk3yelluxBpbTfZcTK2NOIVCwA76r2fRP4TXm9s5/zR8oXgMf7C06j7FrgWkmvHuN6pC6RPaiUirJawQsAko4tu7fa3tJWtH17xEiaACwGTh+t9+zE9j8lPUys3/bVMa5O6gIZoFIaBEnvpxrik7SXyIy7mFiw9BHgQmARMB/4N7DY9spy/hTgBmIV873AL4DLOqQxgVjkc4ftJ6s6nArcSKwb2Uv06uo6nkkMR84q77Ee+JztzZIeALbZnl+Vvxo4w/YcSfOA64A3E3mqbrL9jerya4BbJfXY/u/AWy6lwcshvpSG7uvAF4HTgDcAjxKB6VTiA/37ZUFOiDXkBJwJzCECyM8kdfrP4lzgodZGSXL4EPA4MBtYAVxeHT+RyDP1EyIh5+nAMUAryKwCzpZUp6f4BHC7pOOBHwPLSh0XAT2SzqjK/pzIZvvOAbRLSkOSASqloVtue11Jl30fkUvny7YNfIvIVTRd0klEj+gC272lVzSfSAV/Vodrn0IsgtpyHpFR9lLbm23fCtxWHT+amDBxg+2/2l5PrDT/lnJ8LZFeYS6ApNnAScBq4LXAK4BnbT9jezWRjn5f762kB3mK/XmYUhoxOcSX0tD9uXrdBzxdZSjdVX6PB04sr11lNIVIECciuLU7HvhXtX0y8Pu24bXfUQKc7b9IWiPpS8Bbidw+s4jhOmz3SVpDBMrVwAXAg7a3S3oeuJ3o0T0F3A+ssP1cW522Acd1aoyUhkv2oFIauvZnMXs6lDu6lH0H8PbqZwbwww7n7CF6PLX27d2tF5JOBjYT+ZI2ELmRlrSVXwXMLc/DziOCErb32r6w1G9FucZ6SfPbzj8K+F+H+qY0bLIHldLo+QMxhDapDAciaRIRMK4nJjO02wK8ptp+gsiMOt72y2Xf7Or4AmCj7XNaOySdz4FB7WEip9Ii4FXAvaXcLGCB7SuIBIHXSLqDeEa1sjr/WEZxJmPqXhmgUholti3pHmCFpIXAVqCHmFyxucNpG4ghupa7gKXADyR9jQhOFxMBB2L4baak9wJ/B84mMqRuq+qxR9KdRIC6qzxXolzjs2WobxXxTOo0quAkaSoxVNl7WI2Q0iDkEF9Ko2sBMRV9LfEhPxX4oO0dHcrfT8z2A/Z9V+sDRJDYSAzhLavKf5eYaXcvEdw+AlwCHCfp9VW5O4AJlOG9cu1niYy184iJGT8t9eypznsP0XvaOIh/c0qHJTPqptRgkiYCTwNn2X50GK87l5jyfoLtTs/M+jvvTmCT7euGqy4pdZI9qJQazHYf8R2mhcNxPUnTJX2ceOZ18yCD0zSiN7d8OOqS0qFkgEqp+ZYBb1Pb3PTDdAIxY/BvxIoWg7EEWGJ7+yFLpjQMcogvpZRSI2UPKqWUUiNlgEoppdRIGaBSSik1UgaolFJKjZQBKqWUUiP9Hye+v95VLacdAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "singapore_system = make_system(1/7, 1/14, 5639000, 150, 0, \"Singapore Airlines\", 356.51, 285)\n",
    "US_results_singapore, singapore_results  = run_simulation(singapore_system, update_func)\n",
    "\n",
    "new_zealand_system = make_system(1/7, 1/14, 4886000, 5, 0, \"Air New Zealand\", 356.51, 168)\n",
    "US_results_zealand, new_zealand_results  = run_simulation(new_zealand_system, update_func)\n",
    "\n",
    "spain_system = make_system(1/7, 1/14, 46940000, 674, 0, \"Emirates\", 356.51, 517)\n",
    "US_results_spain, spain_results  = run_simulation(spain_system, update_func)\n",
    "\n",
    "egypt_system = make_system(1/7, 1/14, 98420000, 1, 0, \"Turkish Airline\", 356.51, 337)\n",
    "US_results_egypt, egypt_results  = run_simulation(egypt_system, update_func)\n",
    "\n",
    "qatar_system = make_system(1/7, 1/14, 2782000, 15, 0, \"Qatar Airways\", 356.51, 254)\n",
    "US_results_qatar, qatar_results  = run_simulation(qatar_system, update_func)\n",
    "\n",
    "\n",
    "plot(singapore_system.airline_info[\"num_flights_per_day\"], '-', label=\"Singapore Airlines\")\n",
    "plot(new_zealand_system.airline_info[\"num_flights_per_day\"], ':', label=\"Air New Zealand\")\n",
    "plot(spain_system.airline_info[\"num_flights_per_day\"], '--', label=\"Emirates\")\n",
    "plot(egypt_system.airline_info[\"num_flights_per_day\"], '-.', label=\"Turkish Airline\")\n",
    "plot(qatar_system.airline_info[\"num_flights_per_day\"], '.', label=\"Qatar Airways\")\n",
    "\n",
    "decorate(xlabel='Time (days)',\n",
    "         ylabel='Number Of Flights (Per Day)',\n",
    "        title=\"Number of Flights Per Day (6 Months)\")\n",
    "savefig('figs/Number_of_flights_per_day', bbox_inches=\"tight\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Income Per Day In Millions\n",
    "\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure to file figs/Income_Per_Day\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot(singapore_system.airline_info[\"total_income\"], '-', label=\"Singapore Airlines\")\n",
    "plot(new_zealand_system.airline_info[\"total_income\"], ':', label=\"Air New Zealand\")\n",
    "plot(spain_system.airline_info[\"total_income\"], '--', label=\"Emirates\")\n",
    "plot(egypt_system.airline_info[\"total_income\"], '-.', label=\"Turkish Airline\")\n",
    "plot(qatar_system.airline_info[\"total_income\"], '.', label=\"Qatar Airways\")\n",
    "plt.hlines(y=1, xmin=0, xmax=50, label='Bankruptcy Line')\n",
    "\n",
    "\n",
    "decorate(xlabel='Time (days)',\n",
    "         ylabel='Income (mills)',\n",
    "        title=\"Income Per Day In Millions (6 Months)\")\n",
    "legend(bbox_to_anchor=(1.04,1), loc=\"upper left\")\n",
    "savefig('figs/Income_Per_Day', bbox_inches=\"tight\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Percent Infected In Foreign Countries\n",
    "\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure to file figs/Percent_Infected_Per_Day_In_Foreign_Country\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot(singapore_results.I, '-', label=\"Singapore Airlines (Singapore)\")\n",
    "plot(new_zealand_results.I, ':', label=\"Air New Zealand (New Zealand)\")\n",
    "plot(spain_results.I, '--', label=\"Emirates (Spain)\")\n",
    "plot(egypt_results.I, '-.', label=\"Turkish Airline (Egypt)\")\n",
    "plot(qatar_results.I, '.', label=\"Qatar Airways (Qatar)\")\n",
    "\n",
    "decorate(xlabel='Time (days)',\n",
    "         ylabel='% Infected',\n",
    "        title='Percent Infected in Foreign Country')\n",
    "lgd = legend(bbox_to_anchor=(1.04,1), loc=\"upper left\")\n",
    "savefig('figs/Percent_Infected_Per_Day_In_Foreign_Country', bbox_inches=\"tight\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Percent Infected In The United States\n",
    "\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving figure to file figs/Percent_Infected_Per_Day_In_United_States\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot(US_results_singapore.I, '-', label=\"Singapore Airlines (Singapore)\")\n",
    "plot(US_results_zealand.I, ':', label=\"Air New Zealand (New Zealand)\")\n",
    "plot(US_results_spain.I, '--', label=\"Emirates (Spain)\")\n",
    "plot(US_results_egypt.I, '-.', label=\"Turkish Airline (Egypt)\")\n",
    "plot(US_results_qatar.I, '.', label=\"Qatar Airways (Qatar)\")\n",
    "\n",
    "decorate(xlabel='Time (days)',\n",
    "         ylabel='% Infected',\n",
    "        title=\"Percent Infected In United States\")\n",
    "legend(bbox_to_anchor=(1.04,1), loc=\"upper left\")\n",
    "savefig('figs/Percent_Infected_Per_Day_In_United_States', bbox_inches=\"tight\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Sweeping Parameters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<p> We will be sweeping the contact rate to see if our model is robust"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Sweep only a few values for beta and gamma\n",
    "\n",
    "beta_array: array of beta values\n",
    "gamma: recovery rate\n",
    "FSP: Foreign susceptible population\n",
    "FSI: Foreign infected population\n",
    "FSRL Foreign recovered population\n",
    "name: Airline name\n",
    "ticket_price: Airline ticket price\n",
    "flight_cap: number of available seats on the airplane\n",
    "\n",
    "returns: SweepSeries that maps from beta to number of flights per day\n",
    "\"\"\"\n",
    "def sweep_beta(beta_array, gamma, FSP, FSI, FSR, name, ticket_price, flight_cap):\n",
    "    sweep = SweepSeries()\n",
    "    for beta in beta_array:\n",
    "        system = make_system(beta, gamma, FSP, FSI, FSR, name, ticket_price, flight_cap)\n",
    "        US_results, foreign_results = run_simulation(system, update_func)\n",
    "        sweep[system.beta] = system.airline_info[\"num_flights_per_day\"]\n",
    "    return sweep"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Sweep only a few values for beta and gamma\n",
    "\n",
    "beta_array: array of beta values\n",
    "gamma: recovery rate\n",
    "FSP: Foreign susceptible population\n",
    "FSI: Foreign infected population\n",
    "FSRL Foreign recovered population\n",
    "name: Airline name\n",
    "ticket_price: Airline ticket price\n",
    "flight_cap: number of available seats on the airplane\n",
    "\n",
    "returns: SweepFrame with one row for each beta\n",
    "         and one column for flights on the given day\n",
    "\"\"\"\n",
    "\n",
    "def sweep_parameters(beta_array, gamma_array, FSP, FSI, FSR, name, ticket_price, flight_cap):\n",
    "    frame = SweepFrame(columns=gamma_array)\n",
    "    for gamma in gamma_array:\n",
    "        frame[gamma] = sweep_beta(beta_array, gamma, FSP, FSI, FSR, name, ticket_price, flight_cap)\n",
    "    return frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[                                               0.071429\n",
       " 0.14  [60, 58, 57, 55, 53, 51, 50, 49, 47, 45, 44, 4...\n",
       " 0.80  [60, 59, 57, 55, 54, 53, 51, 49, 47, 46, 45, 4...,\n",
       "                                                0.071429\n",
       " 0.14  [60, 58, 56, 54, 52, 50, 48, 46, 45, 44, 42, 4...\n",
       " 0.80  [60, 59, 57, 56, 54, 53, 52, 51, 49, 48, 47, 4...,\n",
       "                                                0.071429\n",
       " 0.14  [60, 58, 57, 55, 54, 53, 52, 51, 50, 48, 47, 4...\n",
       " 0.80  [60, 59, 57, 55, 53, 52, 51, 50, 48, 46, 44, 4...,\n",
       "                                                0.071429\n",
       " 0.14  [60, 58, 56, 55, 54, 52, 50, 49, 48, 46, 45, 4...\n",
       " 0.80  [60, 58, 56, 55, 53, 52, 51, 49, 48, 46, 44, 4...,\n",
       "                                                0.071429\n",
       " 0.14  [60, 58, 57, 55, 54, 52, 51, 49, 48, 47, 46, 4...\n",
       " 0.80  [60, 58, 57, 55, 53, 52, 50, 48, 47, 46, 44, 4...]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "#Only using two values for beta and 1 for gamma since the computation power begins to get large\n",
    "beta_array = [.14, .80]\n",
    "gamma_array = [1/14]\n",
    "singapore_frame = sweep_parameters(beta_array, gamma_array ,5639000, 150, 0, \"Singapore Airlines\", 356.51, 285)\n",
    "new_zealand_frame = sweep_parameters(beta_array, gamma_array ,4886000, 5, 0, \"Air New Zealand\", 356.51, 168)\n",
    "spain_frame = sweep_parameters(beta_array, gamma_array ,46940000, 674, 0, \"Emirates\", 356.51, 517)\n",
    "egypt_frame = sweep_parameters(beta_array, gamma_array ,98420000, 1, 0, \"Turkish Airlines\", 356.51, 337)\n",
    "qatar_frame = sweep_parameters(beta_array, gamma_array ,2782000, 15, 0, \"Qatar Airways\", 356.51, 254)\n",
    "\n",
    "#Since we have multiple countries, store them in an array to dynamically go through them in the plot_sweep_frame func\n",
    "frames = [singapore_frame,new_zealand_frame,spain_frame,egypt_frame,qatar_frame]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "\"\"\"\n",
    "Function: Plot the values from the sweep series\n",
    "\n",
    "For every frame, plot every Beta/Gamma, plot the number of flights of a country\n",
    "\n",
    "frame: SweepFrame with one row per beta, one column per flight\n",
    "\"\"\"\n",
    "\n",
    "def plot_sweep_frame(frames):\n",
    "    \n",
    "    airlines = [\"Singapore Airlines\", \"Air New Zealand\", \"Emirates\", \"Turkish\", \"Qatar Airways\"]\n",
    "    ptr = 0\n",
    "    \n",
    "    for frame in frames:\n",
    "        for gamma in frame.columns:\n",
    "            column = frame[gamma]\n",
    "            for beta in column.index:\n",
    "                    airline_name = airlines[ptr]\n",
    "                    frac_infected = column[beta]\n",
    "                    plot(frac_infected, label=\"Beta: \" + str(beta) + \" Airline: \" + airline_name)\n",
    "        ptr+=1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Number Of Flights Per Day With Sweeping Beta\n",
    "\n",
    "\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'plot_sweep_frame' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-2-e2b9a7d37b8f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#Plot all of our frames\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mplot_sweep_frame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mframes\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m decorate(xlabel='Days',\n",
      "\u001b[0;31mNameError\u001b[0m: name 'plot_sweep_frame' is not defined"
     ]
    }
   ],
   "source": [
    "#Plot all of our frames\n",
    "\n",
    "plot_sweep_frame(frames)\n",
    "\n",
    "decorate(xlabel='Days',\n",
    "         ylabel='Number of Flights',\n",
    "        title=\"Number of Flights Per Day with Sweeping Beta\")\n",
    "legend(bbox_to_anchor=(1.04,1), loc=\"upper left\")\n",
    "savefig('figs/Sweep_Paramters_Of_Beta', bbox_inches=\"tight\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
